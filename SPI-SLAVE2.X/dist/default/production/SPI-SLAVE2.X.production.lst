

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 04 21:11:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     008F                     	;# 
   109     0090                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0095                     	;# 
   117     0096                     	;# 
   118     0097                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009A                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     0105                     	;# 
   128     0107                     	;# 
   129     0108                     	;# 
   130     0109                     	;# 
   131     010C                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     0185                     	;# 
   137     0187                     	;# 
   138     0188                     	;# 
   139     0189                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001B                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     0088                     	;# 
   182     0089                     	;# 
   183     008C                     	;# 
   184     008D                     	;# 
   185     008E                     	;# 
   186     008F                     	;# 
   187     0090                     	;# 
   188     0091                     	;# 
   189     0092                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0094                     	;# 
   194     0095                     	;# 
   195     0096                     	;# 
   196     0097                     	;# 
   197     0098                     	;# 
   198     0099                     	;# 
   199     009A                     	;# 
   200     009B                     	;# 
   201     009C                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     009F                     	;# 
   205     0105                     	;# 
   206     0107                     	;# 
   207     0108                     	;# 
   208     0109                     	;# 
   209     010C                     	;# 
   210     010C                     	;# 
   211     010D                     	;# 
   212     010E                     	;# 
   213     010F                     	;# 
   214     0185                     	;# 
   215     0187                     	;# 
   216     0188                     	;# 
   217     0189                     	;# 
   218     018C                     	;# 
   219     018D                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     000E                     	;# 
   236     000F                     	;# 
   237     0010                     	;# 
   238     0011                     	;# 
   239     0012                     	;# 
   240     0013                     	;# 
   241     0014                     	;# 
   242     0015                     	;# 
   243     0015                     	;# 
   244     0016                     	;# 
   245     0017                     	;# 
   246     0018                     	;# 
   247     0019                     	;# 
   248     001A                     	;# 
   249     001B                     	;# 
   250     001B                     	;# 
   251     001C                     	;# 
   252     001D                     	;# 
   253     001E                     	;# 
   254     001F                     	;# 
   255     0081                     	;# 
   256     0085                     	;# 
   257     0086                     	;# 
   258     0087                     	;# 
   259     0088                     	;# 
   260     0089                     	;# 
   261     008C                     	;# 
   262     008D                     	;# 
   263     008E                     	;# 
   264     008F                     	;# 
   265     0090                     	;# 
   266     0091                     	;# 
   267     0092                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0094                     	;# 
   272     0095                     	;# 
   273     0096                     	;# 
   274     0097                     	;# 
   275     0098                     	;# 
   276     0099                     	;# 
   277     009A                     	;# 
   278     009B                     	;# 
   279     009C                     	;# 
   280     009D                     	;# 
   281     009E                     	;# 
   282     009F                     	;# 
   283     0105                     	;# 
   284     0107                     	;# 
   285     0108                     	;# 
   286     0109                     	;# 
   287     010C                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     0185                     	;# 
   293     0187                     	;# 
   294     0188                     	;# 
   295     0189                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298     0000                     	;# 
   299     0001                     	;# 
   300     0002                     	;# 
   301     0003                     	;# 
   302     0004                     	;# 
   303     0005                     	;# 
   304     0006                     	;# 
   305     0007                     	;# 
   306     0008                     	;# 
   307     0009                     	;# 
   308     000A                     	;# 
   309     000B                     	;# 
   310     000C                     	;# 
   311     000D                     	;# 
   312     000E                     	;# 
   313     000E                     	;# 
   314     000F                     	;# 
   315     0010                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0015                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001B                     	;# 
   329     001C                     	;# 
   330     001D                     	;# 
   331     001E                     	;# 
   332     001F                     	;# 
   333     0081                     	;# 
   334     0085                     	;# 
   335     0086                     	;# 
   336     0087                     	;# 
   337     0088                     	;# 
   338     0089                     	;# 
   339     008C                     	;# 
   340     008D                     	;# 
   341     008E                     	;# 
   342     008F                     	;# 
   343     0090                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0094                     	;# 
   350     0095                     	;# 
   351     0096                     	;# 
   352     0097                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009A                     	;# 
   356     009B                     	;# 
   357     009C                     	;# 
   358     009D                     	;# 
   359     009E                     	;# 
   360     009F                     	;# 
   361     0105                     	;# 
   362     0107                     	;# 
   363     0108                     	;# 
   364     0109                     	;# 
   365     010C                     	;# 
   366     010C                     	;# 
   367     010D                     	;# 
   368     010E                     	;# 
   369     010F                     	;# 
   370     0185                     	;# 
   371     0187                     	;# 
   372     0188                     	;# 
   373     0189                     	;# 
   374     018C                     	;# 
   375     018D                     	;# 
   376                           
   377                           	psect	strings
   378     0003                     __pstrings:
   379     0003                     stringtab:
   380     0003                     __stringtab:
   381     0003                     stringcode:	
   382                           ;	String table - string pointers are 1 byte each
   383                           
   384     0003                     stringdir:
   385     0003  3000               	movlw	high stringdir
   386     0004  008A               	movwf	10
   387     0005  0804               	movf	4,w
   388     0006  0A84               	incf	4,f
   389     0007  0782               	addwf	2,f
   390     0008                     __stringbase:
   391     0008  3400               	retlw	0
   392     0009                     __end_of__stringtab:
   393     0009                     _dpowers:
   394     0009  3401               	retlw	1
   395     000A  3400               	retlw	0
   396     000B  340A               	retlw	10
   397     000C  3400               	retlw	0
   398     000D  3464               	retlw	100
   399     000E  3400               	retlw	0
   400     000F  34E8               	retlw	232
   401     0010  3403               	retlw	3
   402     0011  3410               	retlw	16
   403     0012  3427               	retlw	39
   404     0013                     __end_of_dpowers:
   405     0008                     _PORTD	set	8
   406     0006                     _PORTB	set	6
   407     0007                     _PORTCbits	set	7
   408     0008                     _PORTDbits	set	8
   409     0006                     _PORTBbits	set	6
   410     0013                     _SSPBUF	set	19
   411     0014                     _SSPCON	set	20
   412     0088                     _TRISD	set	136
   413     0086                     _TRISB	set	134
   414     008F                     _OSCCONbits	set	143
   415     0094                     _SSPSTATbits	set	148
   416     0094                     _SSPSTAT	set	148
   417     0439                     _TRISC1	set	1081
   418     043A                     _TRISC2	set	1082
   419     043B                     _TRISC3	set	1083
   420     043D                     _TRISC5	set	1085
   421     0189                     _ANSELH	set	393
   422     0188                     _ANSEL	set	392
   423     0013                     STR_1:
   424     0013  3441               	retlw	65	;'A'
   425     0014  3444               	retlw	68	;'D'
   426     0015  3443               	retlw	67	;'C'
   427     0016  3431               	retlw	49	;'1'
   428     0017  343A               	retlw	58	;':'
   429     0018  3420               	retlw	32	;' '
   430     0019  3425               	retlw	37	;'%'
   431     001A  3475               	retlw	117	;'u'
   432     001B  3420               	retlw	32	;' '
   433     001C  3420               	retlw	32	;' '
   434     001D  3463               	retlw	99	;'c'
   435     001E  346F               	retlw	111	;'o'
   436     001F  346E               	retlw	110	;'n'
   437     0020  3474               	retlw	116	;'t'
   438     0021  343A               	retlw	58	;':'
   439     0022  3420               	retlw	32	;' '
   440     0023  3420               	retlw	32	;' '
   441     0024  3400               	retlw	0
   442     0025                     STR_2:
   443     0025  3441               	retlw	65	;'A'
   444     0026  3444               	retlw	68	;'D'
   445     0027  3443               	retlw	67	;'C'
   446     0028  3432               	retlw	50	;'2'
   447     0029  343A               	retlw	58	;':'
   448     002A  3420               	retlw	32	;' '
   449     002B  3425               	retlw	37	;'%'
   450     002C  3475               	retlw	117	;'u'
   451     002D  3420               	retlw	32	;' '
   452     002E  3420               	retlw	32	;' '
   453     002F  3420               	retlw	32	;' '
   454     0030  3420               	retlw	32	;' '
   455     0031  3430               	retlw	48	;'0'
   456     0032  3420               	retlw	32	;' '
   457     0033  3420               	retlw	32	;' '
   458     0034  3400               	retlw	0
   459                           
   460                           	psect	cinit
   461     07F3                     start_initialization:	
   462                           ; #config settings
   463                           
   464     07F3                     __initialization:
   465                           
   466                           ; Clear objects allocated to BANK0
   467     07F3  1383               	bcf	3,7	;select IRP bank0
   468     07F4  3020               	movlw	low __pbssBANK0
   469     07F5  0084               	movwf	4
   470     07F6  3036               	movlw	low (__pbssBANK0+22)
   471     07F7  120A  118A  24A8  120A  118A  	fcall	clear_ram0
   472     07FC                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475     07FC                     __end_of__initialization:
   476     07FC  0183               	clrf	3
   477     07FD  120A  118A  2EA0   	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssBANK0
   480     0020                     __pbssBANK0:
   481     0020                     _dato_2:
   482     0020                     	ds	1
   483     0021                     _dato_1:
   484     0021                     	ds	1
   485     0022                     _buffer:
   486     0022                     	ds	20
   487                           
   488                           	psect	clrtext
   489     04A8                     clear_ram0:	
   490                           ;	Called with FSR containing the base address, and
   491                           ;	W with the last address+1
   492                           
   493     04A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   494     04A9                     clrloop0:
   495     04A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   496     04AA  0A84               	incf	4,f	;increment pointer
   497     04AB  0604               	xorwf	4,w	;XOR with final address
   498     04AC  1903               	btfsc	3,2	;have we reached the end yet?
   499     04AD  3400               	retlw	0	;all done for this memory range, return
   500     04AE  0604               	xorwf	4,w	;XOR again to restore value
   501     04AF  2CA9               	goto	clrloop0	;do the next byte
   502                           
   503                           	psect	cstackCOMMON
   504     0070                     __pcstackCOMMON:
   505     0070                     ?_setup:
   506     0070                     ?_spiInit:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_spiReceiveWait:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ??_spiReceiveWait:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ?_spiWrite:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ??_spiWrite:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_spiRead:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ??_spiRead:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_Lcd_Port:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ??_Lcd_Port:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_Lcd_Cmd:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_Lcd_Init:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_Lcd_Write_Char:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_Lcd_Write_String:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_main:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?___lwdiv:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     spiInit@sDataSample:	
   552                           ; 2 bytes @ 0x0
   553                           
   554     0070                     spiWrite@dat:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     Lcd_Port@a:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ___lwdiv@divisor:	
   561                           ; 1 bytes @ 0x0
   562                           
   563                           
   564                           ; 2 bytes @ 0x0
   565     0070                     	ds	1
   566     0071                     ??_Lcd_Cmd:
   567     0071                     ??_Lcd_Write_Char:	
   568                           ; 1 bytes @ 0x1
   569                           
   570     0071                     spiInit@sClockIdle:	
   571                           ; 1 bytes @ 0x1
   572                           
   573                           
   574                           ; 1 bytes @ 0x1
   575     0071                     	ds	1
   576     0072                     spiInit@sTransmitEdge:
   577     0072                     Lcd_Write_Char@temp:	
   578                           ; 1 bytes @ 0x2
   579                           
   580     0072                     ___lwdiv@dividend:	
   581                           ; 1 bytes @ 0x2
   582                           
   583                           
   584                           ; 2 bytes @ 0x2
   585     0072                     	ds	1
   586     0073                     ??_spiInit:
   587     0073                     spiInit@sType:	
   588                           ; 1 bytes @ 0x3
   589                           
   590     0073                     Lcd_Cmd@a:	
   591                           ; 1 bytes @ 0x3
   592                           
   593     0073                     Lcd_Write_Char@y:	
   594                           ; 1 bytes @ 0x3
   595                           
   596                           
   597                           ; 1 bytes @ 0x3
   598     0073                     	ds	1
   599     0074                     ??_setup:
   600     0074                     ?_Lcd_Set_Cursor:	
   601                           ; 1 bytes @ 0x4
   602                           
   603     0074                     ??_Lcd_Init:	
   604                           ; 1 bytes @ 0x4
   605                           
   606     0074                     ??___lwdiv:	
   607                           ; 1 bytes @ 0x4
   608                           
   609     0074                     Lcd_Set_Cursor@b:	
   610                           ; 1 bytes @ 0x4
   611                           
   612     0074                     Lcd_Write_Char@a:	
   613                           ; 1 bytes @ 0x4
   614                           
   615                           
   616                           ; 1 bytes @ 0x4
   617     0074                     	ds	1
   618     0075                     ??_Lcd_Set_Cursor:
   619     0075                     ??_Lcd_Write_String:	
   620                           ; 1 bytes @ 0x5
   621                           
   622     0075                     ___lwdiv@quotient:	
   623                           ; 1 bytes @ 0x5
   624                           
   625                           
   626                           ; 2 bytes @ 0x5
   627     0075                     	ds	1
   628     0076                     Lcd_Set_Cursor@a:
   629     0076                     Lcd_Write_String@i:	
   630                           ; 1 bytes @ 0x6
   631                           
   632                           
   633                           ; 2 bytes @ 0x6
   634     0076                     	ds	1
   635     0077                     Lcd_Set_Cursor@z:
   636     0077                     ___lwdiv@counter:	
   637                           ; 1 bytes @ 0x7
   638                           
   639                           
   640                           ; 1 bytes @ 0x7
   641     0077                     	ds	1
   642     0078                     ?___lwmod:
   643     0078                     Lcd_Set_Cursor@y:	
   644                           ; 2 bytes @ 0x8
   645                           
   646     0078                     Lcd_Write_String@a:	
   647                           ; 1 bytes @ 0x8
   648                           
   649     0078                     ___lwmod@divisor:	
   650                           ; 1 bytes @ 0x8
   651                           
   652                           
   653                           ; 2 bytes @ 0x8
   654     0078                     	ds	1
   655     0079                     Lcd_Set_Cursor@temp:
   656                           
   657                           ; 1 bytes @ 0x9
   658     0079                     	ds	1
   659     007A                     ___lwmod@dividend:
   660                           
   661                           ; 2 bytes @ 0xA
   662     007A                     	ds	2
   663     007C                     ??___lwmod:
   664                           
   665                           ; 1 bytes @ 0xC
   666     007C                     	ds	1
   667     007D                     ___lwmod@counter:
   668                           
   669                           ; 1 bytes @ 0xD
   670     007D                     	ds	1
   671                           
   672                           	psect	cstackBANK0
   673     0036                     __pcstackBANK0:
   674     0036                     ?_sprintf:
   675     0036                     sprintf@f:	
   676                           ; 2 bytes @ 0x0
   677                           
   678                           
   679                           ; 1 bytes @ 0x0
   680     0036                     	ds	3
   681     0039                     ??_sprintf:
   682                           
   683                           ; 1 bytes @ 0x3
   684     0039                     	ds	3
   685     003C                     sprintf@flag:
   686                           
   687                           ; 1 bytes @ 0x6
   688     003C                     	ds	1
   689     003D                     sprintf@ap:
   690                           
   691                           ; 1 bytes @ 0x7
   692     003D                     	ds	1
   693     003E                     sprintf@val:
   694                           
   695                           ; 2 bytes @ 0x8
   696     003E                     	ds	2
   697     0040                     sprintf@prec:
   698                           
   699                           ; 1 bytes @ 0xA
   700     0040                     	ds	1
   701     0041                     sprintf@sp:
   702                           
   703                           ; 1 bytes @ 0xB
   704     0041                     	ds	1
   705     0042                     sprintf@c:
   706                           
   707                           ; 1 bytes @ 0xC
   708     0042                     	ds	1
   709     0043                     ??_main:
   710                           
   711                           ; 1 bytes @ 0xD
   712     0043                     	ds	2
   713                           
   714                           	psect	maintext
   715     06A0                     __pmaintext:	
   716 ;;
   717 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   718 ;;
   719 ;; *************** function _main *****************
   720 ;; Defined at:
   721 ;;		line 59 in file "../SPI-Master.X/main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : B00/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0
   737 ;;      Temps:          0       2       0       0       0
   738 ;;      Totals:         0       2       0       0       0
   739 ;;Total ram usage:        2 bytes
   740 ;; Hardware stack levels required when called: 3
   741 ;; This function calls:
   742 ;;		_Lcd_Init
   743 ;;		_Lcd_Set_Cursor
   744 ;;		_Lcd_Write_String
   745 ;;		_setup
   746 ;;		_spiRead
   747 ;;		_spiWrite
   748 ;;		_sprintf
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754     06A0                     _main:	
   755                           ;psect for function _main
   756                           
   757     06A0                     l1257:	
   758                           ;incstack = 0
   759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   760                           
   761                           
   762                           ;../SPI-Master.X/main.c: 60:     setup();
   763     06A0  120A  118A  24E9  120A  118A  	fcall	_setup
   764                           
   765                           ;../SPI-Master.X/main.c: 61:     Lcd_Init();
   766     06A5  120A  118A  2643  120A  118A  	fcall	_Lcd_Init
   767     06AA                     l1259:
   768                           
   769                           ;../SPI-Master.X/main.c: 68:        PORTCbits.RC2 = 0;
   770     06AA  1283               	bcf	3,5	;RP0=0, select bank0
   771     06AB  1303               	bcf	3,6	;RP1=0, select bank0
   772     06AC  1107               	bcf	7,2	;volatile
   773     06AD                     l1261:
   774                           
   775                           ;../SPI-Master.X/main.c: 69:        _delay((unsigned long)((1)*(4000000/4000.0)));
   776     06AD  30C7               	movlw	199
   777     06AE  1283               	bcf	3,5	;RP0=0, select bank0
   778     06AF  1303               	bcf	3,6	;RP1=0, select bank0
   779     06B0  00C3               	movwf	??_main
   780     06B1                     u617:
   781     06B1  2EB2               	nop2
   782     06B2  0BC3               	decfsz	??_main,f
   783     06B3  2EB1               	goto	u617
   784     06B4  2EB5               	nop2
   785     06B5                     l1263:
   786                           
   787                           ;../SPI-Master.X/main.c: 71:        spiWrite(1);
   788     06B5  3001               	movlw	1
   789     06B6  120A  118A  249B  120A  118A  	fcall	_spiWrite
   790     06BB                     l1265:
   791                           
   792                           ;../SPI-Master.X/main.c: 72:        dato_1 = spiRead();
   793     06BB  120A  118A  24B0  120A  118A  	fcall	_spiRead
   794     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   795     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   796     06C2  00A1               	movwf	_dato_1
   797     06C3                     l1267:
   798                           
   799                           ;../SPI-Master.X/main.c: 73:        Lcd_Set_Cursor(1,1);
   800     06C3  01F4               	clrf	Lcd_Set_Cursor@b
   801     06C4  0AF4               	incf	Lcd_Set_Cursor@b,f
   802     06C5  3001               	movlw	1
   803     06C6  120A  118A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
   804     06CB                     l1269:
   805                           
   806                           ;../SPI-Master.X/main.c: 74:        sprintf(buffer, "ADC1: %u  cont:  ", dato_1);
   807     06CB  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   808     06CC  1283               	bcf	3,5	;RP0=0, select bank0
   809     06CD  1303               	bcf	3,6	;RP1=0, select bank0
   810     06CE  00B6               	movwf	sprintf@f
   811     06CF  0821               	movf	_dato_1,w
   812     06D0  00C3               	movwf	??_main
   813     06D1  01C4               	clrf	??_main+1
   814     06D2  0843               	movf	??_main,w
   815     06D3  00B7               	movwf	?_sprintf+1
   816     06D4  0844               	movf	??_main+1,w
   817     06D5  00B8               	movwf	?_sprintf+2
   818     06D6  3022               	movlw	(low (_buffer| 0))& (0+255)
   819     06D7  120A  118A  2732  120A  118A  	fcall	_sprintf
   820     06DC                     l1271:
   821                           
   822                           ;../SPI-Master.X/main.c: 75:         Lcd_Write_String(buffer);
   823     06DC  3022               	movlw	(low (_buffer| 0))& (0+255)
   824     06DD  120A  118A  2509  120A  118A  	fcall	_Lcd_Write_String
   825     06E2                     l1273:
   826                           
   827                           ;../SPI-Master.X/main.c: 77:        _delay((unsigned long)((1)*(4000000/4000.0)));
   828     06E2  30C7               	movlw	199
   829     06E3  1283               	bcf	3,5	;RP0=0, select bank0
   830     06E4  1303               	bcf	3,6	;RP1=0, select bank0
   831     06E5  00C3               	movwf	??_main
   832     06E6                     u627:
   833     06E6  2EE7               	nop2
   834     06E7  0BC3               	decfsz	??_main,f
   835     06E8  2EE6               	goto	u627
   836     06E9  2EEA               	nop2
   837     06EA                     l1275:
   838                           
   839                           ;../SPI-Master.X/main.c: 78:        PORTCbits.RC2 = 1;
   840     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   841     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   842     06EC  1507               	bsf	7,2	;volatile
   843     06ED                     l1277:
   844                           
   845                           ;../SPI-Master.X/main.c: 80:        PORTCbits.RC1 = 0;
   846     06ED  1087               	bcf	7,1	;volatile
   847     06EE                     l1279:
   848                           
   849                           ;../SPI-Master.X/main.c: 81:        _delay((unsigned long)((1)*(4000000/4000.0)));
   850     06EE  30C7               	movlw	199
   851     06EF  1283               	bcf	3,5	;RP0=0, select bank0
   852     06F0  1303               	bcf	3,6	;RP1=0, select bank0
   853     06F1  00C3               	movwf	??_main
   854     06F2                     u637:
   855     06F2  2EF3               	nop2
   856     06F3  0BC3               	decfsz	??_main,f
   857     06F4  2EF2               	goto	u637
   858     06F5  2EF6               	nop2
   859     06F6                     l1281:
   860                           
   861                           ;../SPI-Master.X/main.c: 83:        spiWrite(1);
   862     06F6  3001               	movlw	1
   863     06F7  120A  118A  249B  120A  118A  	fcall	_spiWrite
   864     06FC                     l1283:
   865                           
   866                           ;../SPI-Master.X/main.c: 84:        dato_2 = spiRead();
   867     06FC  120A  118A  24B0  120A  118A  	fcall	_spiRead
   868     0701  1283               	bcf	3,5	;RP0=0, select bank0
   869     0702  1303               	bcf	3,6	;RP1=0, select bank0
   870     0703  00A0               	movwf	_dato_2
   871     0704                     l1285:
   872                           
   873                           ;../SPI-Master.X/main.c: 85:        Lcd_Set_Cursor(2,1);
   874     0704  01F4               	clrf	Lcd_Set_Cursor@b
   875     0705  0AF4               	incf	Lcd_Set_Cursor@b,f
   876     0706  3002               	movlw	2
   877     0707  120A  118A  25FD  120A  118A  	fcall	_Lcd_Set_Cursor
   878     070C                     l1287:
   879                           
   880                           ;../SPI-Master.X/main.c: 86:        sprintf(buffer, "ADC2: %u    0  ", dato_2);
   881     070C  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   882     070D  1283               	bcf	3,5	;RP0=0, select bank0
   883     070E  1303               	bcf	3,6	;RP1=0, select bank0
   884     070F  00B6               	movwf	sprintf@f
   885     0710  0820               	movf	_dato_2,w
   886     0711  00C3               	movwf	??_main
   887     0712  01C4               	clrf	??_main+1
   888     0713  0843               	movf	??_main,w
   889     0714  00B7               	movwf	?_sprintf+1
   890     0715  0844               	movf	??_main+1,w
   891     0716  00B8               	movwf	?_sprintf+2
   892     0717  3022               	movlw	(low (_buffer| 0))& (0+255)
   893     0718  120A  118A  2732  120A  118A  	fcall	_sprintf
   894     071D                     l1289:
   895                           
   896                           ;../SPI-Master.X/main.c: 87:         Lcd_Write_String(buffer);
   897     071D  3022               	movlw	(low (_buffer| 0))& (0+255)
   898     071E  120A  118A  2509  120A  118A  	fcall	_Lcd_Write_String
   899     0723                     l1291:
   900                           
   901                           ;../SPI-Master.X/main.c: 89:        _delay((unsigned long)((1)*(4000000/4000.0)));
   902     0723  30C7               	movlw	199
   903     0724  1283               	bcf	3,5	;RP0=0, select bank0
   904     0725  1303               	bcf	3,6	;RP1=0, select bank0
   905     0726  00C3               	movwf	??_main
   906     0727                     u647:
   907     0727  2F28               	nop2
   908     0728  0BC3               	decfsz	??_main,f
   909     0729  2F27               	goto	u647
   910     072A  2F2B               	nop2
   911     072B                     l1293:
   912                           
   913                           ;../SPI-Master.X/main.c: 90:        PORTCbits.RC1 = 1;
   914     072B  1283               	bcf	3,5	;RP0=0, select bank0
   915     072C  1303               	bcf	3,6	;RP1=0, select bank0
   916     072D  1487               	bsf	7,1	;volatile
   917     072E  2EAA               	goto	l1259
   918     072F  120A  118A  2800   	ljmp	start
   919     0732                     __end_of_main:
   920                           
   921                           	psect	text1
   922     0732                     __ptext1:	
   923 ;; *************** function _sprintf *****************
   924 ;; Defined at:
   925 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  sp              1    wreg     PTR unsigned char 
   928 ;;		 -> buffer(20), 
   929 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   930 ;;		 -> STR_2(16), STR_1(18), 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   933 ;;		 -> buffer(20), 
   934 ;;  tmpval          4    0        struct .
   935 ;;  val             2    8[BANK0 ] unsigned int 
   936 ;;  cp              2    0        PTR const unsigned char 
   937 ;;  len             2    0        unsigned int 
   938 ;;  c               1   12[BANK0 ] unsigned char 
   939 ;;  prec            1   10[BANK0 ] char 
   940 ;;  ap              1    7[BANK0 ] PTR void [1]
   941 ;;		 -> ?_sprintf(2), 
   942 ;;  flag            1    6[BANK0 ] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  2    0[BANK0 ] int 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       3       0       0       0
   953 ;;      Locals:         0       7       0       0       0
   954 ;;      Temps:          0       3       0       0       0
   955 ;;      Totals:         0      13       0       0       0
   956 ;;Total ram usage:       13 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; Hardware stack levels required when called: 1
   959 ;; This function calls:
   960 ;;		___lwdiv
   961 ;;		___lwmod
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967     0732                     _sprintf:	
   968                           ;psect for function _sprintf
   969                           
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   973                           ;sprintf@sp stored from wreg
   974     0732  1283               	bcf	3,5	;RP0=0, select bank0
   975     0733  1303               	bcf	3,6	;RP1=0, select bank0
   976     0734  00C1               	movwf	sprintf@sp
   977     0735                     l1199:
   978                           
   979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   980     0735  3037               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   981     0736  00BD               	movwf	sprintf@ap
   982                           
   983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   984     0737  2FDE               	goto	l1241
   985     0738                     l1201:
   986                           
   987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   988     0738  3025               	movlw	37
   989     0739  0642               	xorwf	sprintf@c,w
   990     073A  1903               	btfsc	3,2
   991     073B  2F3D               	goto	u561
   992     073C  2F3E               	goto	u560
   993     073D                     u561:
   994     073D  2F48               	goto	l1207
   995     073E                     u560:
   996     073E                     l1203:
   997                           
   998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   999     073E  0841               	movf	sprintf@sp,w
  1000     073F  0084               	movwf	4
  1001     0740  0842               	movf	sprintf@c,w
  1002     0741  1383               	bcf	3,7	;select IRP bank0
  1003     0742  0080               	movwf	0
  1004     0743                     l1205:
  1005     0743  3001               	movlw	1
  1006     0744  00B9               	movwf	??_sprintf
  1007     0745  0839               	movf	??_sprintf,w
  1008     0746  07C1               	addwf	sprintf@sp,f
  1009                           
  1010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1011     0747  2FDE               	goto	l1241
  1012     0748                     l1207:
  1013                           
  1014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1015     0748  01BC               	clrf	sprintf@flag
  1016                           
  1017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1018     0749  2F4F               	goto	l1213
  1019     074A                     l1209:
  1020                           
  1021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1022     074A  30C0               	movlw	192
  1023     074B  00B9               	movwf	??_sprintf
  1024     074C  0839               	movf	??_sprintf,w
  1025     074D  04BC               	iorwf	sprintf@flag,f
  1026                           
  1027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1028     074E  2F69               	goto	l1215
  1029     074F                     l1213:
  1030     074F  3001               	movlw	1
  1031     0750  07B6               	addwf	sprintf@f,f
  1032     0751  30FF               	movlw	-1
  1033     0752  0736               	addwf	sprintf@f,w
  1034     0753  0084               	movwf	4
  1035     0754  120A  118A  2003  120A  118A  	fcall	stringdir
  1036     0759  00C2               	movwf	sprintf@c
  1037     075A  00B9               	movwf	??_sprintf
  1038     075B  01BA               	clrf	??_sprintf+1
  1039                           
  1040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1041                           ; Switch size 1, requested type "simple"
  1042                           ; Number of cases is 1, Range of values is 0 to 0
  1043                           ; switch strategies available:
  1044                           ; Name         Instructions Cycles
  1045                           ; simple_byte            4     3 (average)
  1046                           ; direct_byte           11     8 (fixed)
  1047                           ; jumptable            260     6 (fixed)
  1048                           ;	Chosen strategy is simple_byte
  1049     075C  083A               	movf	??_sprintf+1,w
  1050     075D  3A00               	xorlw	0	; case 0
  1051     075E  1903               	skipnz
  1052     075F  2F61               	goto	l1315
  1053     0760  2FDE               	goto	l1241
  1054     0761                     l1315:
  1055                           
  1056                           ; Switch size 1, requested type "simple"
  1057                           ; Number of cases is 2, Range of values is 0 to 117
  1058                           ; switch strategies available:
  1059                           ; Name         Instructions Cycles
  1060                           ; simple_byte            7     4 (average)
  1061                           ; jumptable            260     6 (fixed)
  1062                           ;	Chosen strategy is simple_byte
  1063     0761  0839               	movf	??_sprintf,w
  1064     0762  3A00               	xorlw	0	; case 0
  1065     0763  1903               	skipnz
  1066     0764  2FEE               	goto	l1243
  1067     0765  3A75               	xorlw	117	; case 117
  1068     0766  1903               	skipnz
  1069     0767  2F4A               	goto	l1209
  1070     0768  2FDE               	goto	l1241
  1071     0769                     l1215:
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1074     0769  083D               	movf	sprintf@ap,w
  1075     076A  0084               	movwf	4
  1076     076B  1383               	bcf	3,7	;select IRP bank0
  1077     076C  0800               	movf	0,w
  1078     076D  00BE               	movwf	sprintf@val
  1079     076E  0A84               	incf	4,f
  1080     076F  0800               	movf	0,w
  1081     0770  00BF               	movwf	sprintf@val+1
  1082     0771                     l1217:
  1083     0771  3002               	movlw	2
  1084     0772  00B9               	movwf	??_sprintf
  1085     0773  0839               	movf	??_sprintf,w
  1086     0774  07BD               	addwf	sprintf@ap,f
  1087     0775                     l1219:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1090     0775  01C2               	clrf	sprintf@c
  1091     0776  0AC2               	incf	sprintf@c,f
  1092     0777                     l1225:
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1095     0777  0842               	movf	sprintf@c,w
  1096     0778  00B9               	movwf	??_sprintf
  1097     0779  0739               	addwf	??_sprintf,w
  1098     077A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1099     077B  0084               	movwf	4
  1100     077C  120A  118A  2003  120A  118A  	fcall	stringdir
  1101     0781  00BA               	movwf	??_sprintf+1
  1102     0782  120A  118A  2003  120A  118A  	fcall	stringdir
  1103     0787  00BB               	movwf	??_sprintf+2
  1104     0788  083B               	movf	??_sprintf+2,w
  1105     0789  023F               	subwf	sprintf@val+1,w
  1106     078A  1D03               	skipz
  1107     078B  2F8E               	goto	u575
  1108     078C  083A               	movf	??_sprintf+1,w
  1109     078D  023E               	subwf	sprintf@val,w
  1110     078E                     u575:
  1111     078E  1803               	skipnc
  1112     078F  2F91               	goto	u571
  1113     0790  2F92               	goto	u570
  1114     0791                     u571:
  1115     0791  2F93               	goto	l1229
  1116     0792                     u570:
  1117     0792  2F9D               	goto	l1231
  1118     0793                     l1229:
  1119     0793  3001               	movlw	1
  1120     0794  00B9               	movwf	??_sprintf
  1121     0795  0839               	movf	??_sprintf,w
  1122     0796  07C2               	addwf	sprintf@c,f
  1123     0797  3005               	movlw	5
  1124     0798  0642               	xorwf	sprintf@c,w
  1125     0799  1D03               	btfss	3,2
  1126     079A  2F9C               	goto	u581
  1127     079B  2F9D               	goto	u580
  1128     079C                     u581:
  1129     079C  2F77               	goto	l1225
  1130     079D                     u580:
  1131     079D                     l1231:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1134     079D  0842               	movf	sprintf@c,w
  1135     079E  00C0               	movwf	sprintf@prec
  1136                           
  1137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1138     079F  2FD5               	goto	l1239
  1139     07A0                     l1233:
  1140                           
  1141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1142     07A0  300A               	movlw	10
  1143     07A1  00F8               	movwf	___lwmod@divisor
  1144     07A2  3000               	movlw	0
  1145     07A3  00F9               	movwf	___lwmod@divisor+1
  1146     07A4  0840               	movf	sprintf@prec,w
  1147     07A5  00B9               	movwf	??_sprintf
  1148     07A6  0739               	addwf	??_sprintf,w
  1149     07A7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1150     07A8  0084               	movwf	4
  1151     07A9  120A  118A  2003  120A  118A  	fcall	stringdir
  1152     07AE  00F0               	movwf	___lwdiv@divisor
  1153     07AF  120A  118A  2003  120A  118A  	fcall	stringdir
  1154     07B4  00F1               	movwf	___lwdiv@divisor+1
  1155     07B5  083F               	movf	sprintf@val+1,w
  1156     07B6  00F3               	movwf	___lwdiv@dividend+1
  1157     07B7  083E               	movf	sprintf@val,w
  1158     07B8  00F2               	movwf	___lwdiv@dividend
  1159     07B9  120A  118A  25B9  120A  118A  	fcall	___lwdiv
  1160     07BE  0871               	movf	?___lwdiv+1,w
  1161     07BF  00FB               	movwf	___lwmod@dividend+1
  1162     07C0  0870               	movf	?___lwdiv,w
  1163     07C1  00FA               	movwf	___lwmod@dividend
  1164     07C2  120A  118A  257F  120A  118A  	fcall	___lwmod
  1165     07C7  0878               	movf	?___lwmod,w
  1166     07C8  3E30               	addlw	48
  1167     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1168     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1169     07CB  00C2               	movwf	sprintf@c
  1170     07CC                     l1235:
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1173     07CC  0841               	movf	sprintf@sp,w
  1174     07CD  0084               	movwf	4
  1175     07CE  0842               	movf	sprintf@c,w
  1176     07CF  1383               	bcf	3,7	;select IRP bank0
  1177     07D0  0080               	movwf	0
  1178     07D1                     l1237:
  1179     07D1  3001               	movlw	1
  1180     07D2  00B9               	movwf	??_sprintf
  1181     07D3  0839               	movf	??_sprintf,w
  1182     07D4  07C1               	addwf	sprintf@sp,f
  1183     07D5                     l1239:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1186     07D5  30FF               	movlw	255
  1187     07D6  00B9               	movwf	??_sprintf
  1188     07D7  0839               	movf	??_sprintf,w
  1189     07D8  07C0               	addwf	sprintf@prec,f
  1190     07D9  0A40               	incf	sprintf@prec,w
  1191     07DA  1D03               	btfss	3,2
  1192     07DB  2FDD               	goto	u591
  1193     07DC  2FDE               	goto	u590
  1194     07DD                     u591:
  1195     07DD  2FA0               	goto	l1233
  1196     07DE                     u590:
  1197     07DE                     l1241:
  1198                           
  1199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1200     07DE  3001               	movlw	1
  1201     07DF  07B6               	addwf	sprintf@f,f
  1202     07E0  30FF               	movlw	-1
  1203     07E1  0736               	addwf	sprintf@f,w
  1204     07E2  0084               	movwf	4
  1205     07E3  120A  118A  2003  120A  118A  	fcall	stringdir
  1206     07E8  00C2               	movwf	sprintf@c
  1207     07E9  0842               	movf	sprintf@c,w
  1208     07EA  1D03               	btfss	3,2
  1209     07EB  2FED               	goto	u601
  1210     07EC  2FEE               	goto	u600
  1211     07ED                     u601:
  1212     07ED  2F38               	goto	l1201
  1213     07EE                     u600:
  1214     07EE                     l1243:
  1215                           
  1216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1217     07EE  0841               	movf	sprintf@sp,w
  1218     07EF  0084               	movwf	4
  1219     07F0  1383               	bcf	3,7	;select IRP bank0
  1220     07F1  0180               	clrf	0
  1221     07F2                     l243:
  1222     07F2  0008               	return
  1223     07F3                     __end_of_sprintf:
  1224                           
  1225                           	psect	text2
  1226     057F                     __ptext2:	
  1227 ;; *************** function ___lwmod *****************
  1228 ;; Defined at:
  1229 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  divisor         2    8[COMMON] unsigned int 
  1232 ;;  dividend        2   10[COMMON] unsigned int 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  counter         1   13[COMMON] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  2    8[COMMON] unsigned int 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         4       0       0       0       0
  1245 ;;      Locals:         1       0       0       0       0
  1246 ;;      Temps:          1       0       0       0       0
  1247 ;;      Totals:         6       0       0       0       0
  1248 ;;Total ram usage:        6 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_sprintf
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257     057F                     ___lwmod:	
  1258                           ;psect for function ___lwmod
  1259                           
  1260     057F                     l1115:	
  1261                           ;incstack = 0
  1262                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1263                           
  1264     057F  0878               	movf	___lwmod@divisor,w
  1265     0580  0479               	iorwf	___lwmod@divisor+1,w
  1266     0581  1903               	btfsc	3,2
  1267     0582  2D84               	goto	u451
  1268     0583  2D85               	goto	u450
  1269     0584                     u451:
  1270     0584  2DB4               	goto	l1133
  1271     0585                     u450:
  1272     0585                     l1117:
  1273     0585  01FD               	clrf	___lwmod@counter
  1274     0586  0AFD               	incf	___lwmod@counter,f
  1275     0587  2D93               	goto	l1123
  1276     0588                     l1119:
  1277     0588  3001               	movlw	1
  1278     0589                     u465:
  1279     0589  1003               	clrc
  1280     058A  0DF8               	rlf	___lwmod@divisor,f
  1281     058B  0DF9               	rlf	___lwmod@divisor+1,f
  1282     058C  3EFF               	addlw	-1
  1283     058D  1D03               	skipz
  1284     058E  2D89               	goto	u465
  1285     058F                     l1121:
  1286     058F  3001               	movlw	1
  1287     0590  00FC               	movwf	??___lwmod
  1288     0591  087C               	movf	??___lwmod,w
  1289     0592  07FD               	addwf	___lwmod@counter,f
  1290     0593                     l1123:
  1291     0593  1FF9               	btfss	___lwmod@divisor+1,7
  1292     0594  2D96               	goto	u471
  1293     0595  2D97               	goto	u470
  1294     0596                     u471:
  1295     0596  2D88               	goto	l1119
  1296     0597                     u470:
  1297     0597                     l1125:
  1298     0597  0879               	movf	___lwmod@divisor+1,w
  1299     0598  027B               	subwf	___lwmod@dividend+1,w
  1300     0599  1D03               	skipz
  1301     059A  2D9D               	goto	u485
  1302     059B  0878               	movf	___lwmod@divisor,w
  1303     059C  027A               	subwf	___lwmod@dividend,w
  1304     059D                     u485:
  1305     059D  1C03               	skipc
  1306     059E  2DA0               	goto	u481
  1307     059F  2DA1               	goto	u480
  1308     05A0                     u481:
  1309     05A0  2DA7               	goto	l1129
  1310     05A1                     u480:
  1311     05A1                     l1127:
  1312     05A1  0878               	movf	___lwmod@divisor,w
  1313     05A2  02FA               	subwf	___lwmod@dividend,f
  1314     05A3  0879               	movf	___lwmod@divisor+1,w
  1315     05A4  1C03               	skipc
  1316     05A5  03FB               	decf	___lwmod@dividend+1,f
  1317     05A6  02FB               	subwf	___lwmod@dividend+1,f
  1318     05A7                     l1129:
  1319     05A7  3001               	movlw	1
  1320     05A8                     u495:
  1321     05A8  1003               	clrc
  1322     05A9  0CF9               	rrf	___lwmod@divisor+1,f
  1323     05AA  0CF8               	rrf	___lwmod@divisor,f
  1324     05AB  3EFF               	addlw	-1
  1325     05AC  1D03               	skipz
  1326     05AD  2DA8               	goto	u495
  1327     05AE                     l1131:
  1328     05AE  3001               	movlw	1
  1329     05AF  02FD               	subwf	___lwmod@counter,f
  1330     05B0  1D03               	btfss	3,2
  1331     05B1  2DB3               	goto	u501
  1332     05B2  2DB4               	goto	u500
  1333     05B3                     u501:
  1334     05B3  2D97               	goto	l1125
  1335     05B4                     u500:
  1336     05B4                     l1133:
  1337     05B4  087B               	movf	___lwmod@dividend+1,w
  1338     05B5  00F9               	movwf	?___lwmod+1
  1339     05B6  087A               	movf	___lwmod@dividend,w
  1340     05B7  00F8               	movwf	?___lwmod
  1341     05B8                     l529:
  1342     05B8  0008               	return
  1343     05B9                     __end_of___lwmod:
  1344                           
  1345                           	psect	text3
  1346     05B9                     __ptext3:	
  1347 ;; *************** function ___lwdiv *****************
  1348 ;; Defined at:
  1349 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  divisor         2    0[COMMON] unsigned int 
  1352 ;;  dividend        2    2[COMMON] unsigned int 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  quotient        2    5[COMMON] unsigned int 
  1355 ;;  counter         1    7[COMMON] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  2    0[COMMON] unsigned int 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1365 ;;      Params:         4       0       0       0       0
  1366 ;;      Locals:         3       0       0       0       0
  1367 ;;      Temps:          1       0       0       0       0
  1368 ;;      Totals:         8       0       0       0       0
  1369 ;;Total ram usage:        8 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_sprintf
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378     05B9                     ___lwdiv:	
  1379                           ;psect for function ___lwdiv
  1380                           
  1381     05B9                     l1089:	
  1382                           ;incstack = 0
  1383                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1384                           
  1385     05B9  01F5               	clrf	___lwdiv@quotient
  1386     05BA  01F6               	clrf	___lwdiv@quotient+1
  1387     05BB                     l1091:
  1388     05BB  0870               	movf	___lwdiv@divisor,w
  1389     05BC  0471               	iorwf	___lwdiv@divisor+1,w
  1390     05BD  1903               	btfsc	3,2
  1391     05BE  2DC0               	goto	u381
  1392     05BF  2DC1               	goto	u380
  1393     05C0                     u381:
  1394     05C0  2DF8               	goto	l1111
  1395     05C1                     u380:
  1396     05C1                     l1093:
  1397     05C1  01F7               	clrf	___lwdiv@counter
  1398     05C2  0AF7               	incf	___lwdiv@counter,f
  1399     05C3  2DCF               	goto	l1099
  1400     05C4                     l1095:
  1401     05C4  3001               	movlw	1
  1402     05C5                     u395:
  1403     05C5  1003               	clrc
  1404     05C6  0DF0               	rlf	___lwdiv@divisor,f
  1405     05C7  0DF1               	rlf	___lwdiv@divisor+1,f
  1406     05C8  3EFF               	addlw	-1
  1407     05C9  1D03               	skipz
  1408     05CA  2DC5               	goto	u395
  1409     05CB                     l1097:
  1410     05CB  3001               	movlw	1
  1411     05CC  00F4               	movwf	??___lwdiv
  1412     05CD  0874               	movf	??___lwdiv,w
  1413     05CE  07F7               	addwf	___lwdiv@counter,f
  1414     05CF                     l1099:
  1415     05CF  1FF1               	btfss	___lwdiv@divisor+1,7
  1416     05D0  2DD2               	goto	u401
  1417     05D1  2DD3               	goto	u400
  1418     05D2                     u401:
  1419     05D2  2DC4               	goto	l1095
  1420     05D3                     u400:
  1421     05D3                     l1101:
  1422     05D3  3001               	movlw	1
  1423     05D4                     u415:
  1424     05D4  1003               	clrc
  1425     05D5  0DF5               	rlf	___lwdiv@quotient,f
  1426     05D6  0DF6               	rlf	___lwdiv@quotient+1,f
  1427     05D7  3EFF               	addlw	-1
  1428     05D8  1D03               	skipz
  1429     05D9  2DD4               	goto	u415
  1430     05DA  0871               	movf	___lwdiv@divisor+1,w
  1431     05DB  0273               	subwf	___lwdiv@dividend+1,w
  1432     05DC  1D03               	skipz
  1433     05DD  2DE0               	goto	u425
  1434     05DE  0870               	movf	___lwdiv@divisor,w
  1435     05DF  0272               	subwf	___lwdiv@dividend,w
  1436     05E0                     u425:
  1437     05E0  1C03               	skipc
  1438     05E1  2DE3               	goto	u421
  1439     05E2  2DE4               	goto	u420
  1440     05E3                     u421:
  1441     05E3  2DEB               	goto	l1107
  1442     05E4                     u420:
  1443     05E4                     l1103:
  1444     05E4  0870               	movf	___lwdiv@divisor,w
  1445     05E5  02F2               	subwf	___lwdiv@dividend,f
  1446     05E6  0871               	movf	___lwdiv@divisor+1,w
  1447     05E7  1C03               	skipc
  1448     05E8  03F3               	decf	___lwdiv@dividend+1,f
  1449     05E9  02F3               	subwf	___lwdiv@dividend+1,f
  1450     05EA                     l1105:
  1451     05EA  1475               	bsf	___lwdiv@quotient,0
  1452     05EB                     l1107:
  1453     05EB  3001               	movlw	1
  1454     05EC                     u435:
  1455     05EC  1003               	clrc
  1456     05ED  0CF1               	rrf	___lwdiv@divisor+1,f
  1457     05EE  0CF0               	rrf	___lwdiv@divisor,f
  1458     05EF  3EFF               	addlw	-1
  1459     05F0  1D03               	skipz
  1460     05F1  2DEC               	goto	u435
  1461     05F2                     l1109:
  1462     05F2  3001               	movlw	1
  1463     05F3  02F7               	subwf	___lwdiv@counter,f
  1464     05F4  1D03               	btfss	3,2
  1465     05F5  2DF7               	goto	u441
  1466     05F6  2DF8               	goto	u440
  1467     05F7                     u441:
  1468     05F7  2DD3               	goto	l1101
  1469     05F8                     u440:
  1470     05F8                     l1111:
  1471     05F8  0876               	movf	___lwdiv@quotient+1,w
  1472     05F9  00F1               	movwf	?___lwdiv+1
  1473     05FA  0875               	movf	___lwdiv@quotient,w
  1474     05FB  00F0               	movwf	?___lwdiv
  1475     05FC                     l519:
  1476     05FC  0008               	return
  1477     05FD                     __end_of___lwdiv:
  1478                           
  1479                           	psect	text4
  1480     049B                     __ptext4:	
  1481 ;; *************** function _spiWrite *****************
  1482 ;; Defined at:
  1483 ;;		line 34 in file "../SPI-Master.X/SPI.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  dat             1    wreg     unsigned char 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  dat             1    0[COMMON] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         1       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0
  1500 ;;      Totals:         1       0       0       0       0
  1501 ;;Total ram usage:        1 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510     049B                     _spiWrite:	
  1511                           ;psect for function _spiWrite
  1512                           
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _spiWrite: [wreg]
  1516                           ;spiWrite@dat stored from wreg
  1517     049B  00F0               	movwf	spiWrite@dat
  1518     049C                     l1137:
  1519                           
  1520                           ;../SPI-Master.X/SPI.c: 34: void spiWrite(char dat);../SPI-Master.X/SPI.c: 35: {;../SPI-
      +                          Master.X/SPI.c: 36:     SSPBUF = dat;
  1521     049C  0870               	movf	spiWrite@dat,w
  1522     049D  1283               	bcf	3,5	;RP0=0, select bank0
  1523     049E  1303               	bcf	3,6	;RP1=0, select bank0
  1524     049F  0093               	movwf	19	;volatile
  1525     04A0                     l26:
  1526     04A0  0008               	return
  1527     04A1                     __end_of_spiWrite:
  1528                           
  1529                           	psect	text5
  1530     04B0                     __ptext5:	
  1531 ;; *************** function _spiRead *****************
  1532 ;; Defined at:
  1533 ;;		line 47 in file "../SPI-Master.X/SPI.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		_spiReceiveWait
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     04B0                     _spiRead:	
  1562                           ;psect for function _spiRead
  1563                           
  1564     04B0                     l1139:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1567                           
  1568                           
  1569                           ;../SPI-Master.X/SPI.c: 49:     spiReceiveWait();
  1570     04B0  120A  118A  24A1  120A  118A  	fcall	_spiReceiveWait
  1571     04B5                     l1141:
  1572                           
  1573                           ;../SPI-Master.X/SPI.c: 50:     return(SSPBUF);
  1574     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1575     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1576     04B7  0813               	movf	19,w	;volatile
  1577     04B8                     l34:
  1578     04B8  0008               	return
  1579     04B9                     __end_of_spiRead:
  1580                           
  1581                           	psect	text6
  1582     04A1                     __ptext6:	
  1583 ;; *************** function _spiReceiveWait *****************
  1584 ;; Defined at:
  1585 ;;		line 29 in file "../SPI-Master.X/SPI.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		None
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_spiRead
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612     04A1                     _spiReceiveWait:	
  1613                           ;psect for function _spiReceiveWait
  1614                           
  1615     04A1                     l1057:	
  1616                           ;incstack = 0
  1617                           ; Regs used in _spiReceiveWait: []
  1618                           
  1619     04A1                     l20:	
  1620                           ;../SPI-Master.X/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1621                           
  1622     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  1623     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  1624     04A3  1C14               	btfss	20,0	;volatile
  1625     04A4  2CA6               	goto	u361
  1626     04A5  2CA7               	goto	u360
  1627     04A6                     u361:
  1628     04A6  2CA1               	goto	l20
  1629     04A7                     u360:
  1630     04A7                     l23:
  1631     04A7  0008               	return
  1632     04A8                     __end_of_spiReceiveWait:
  1633                           
  1634                           	psect	text7
  1635     04E9                     __ptext7:	
  1636 ;; *************** function _setup *****************
  1637 ;; Defined at:
  1638 ;;		line 100 in file "../SPI-Master.X/main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 1
  1659 ;; This function calls:
  1660 ;;		_spiInit
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666     04E9                     _setup:	
  1667                           ;psect for function _setup
  1668                           
  1669     04E9                     l1185:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1672                           
  1673                           
  1674                           ;../SPI-Master.X/main.c: 103:     OSCCONbits.IRCF2 = 1;
  1675     04E9  1683               	bsf	3,5	;RP0=1, select bank1
  1676     04EA  1303               	bcf	3,6	;RP1=0, select bank1
  1677     04EB  170F               	bsf	15,6	;volatile
  1678                           
  1679                           ;../SPI-Master.X/main.c: 104:     OSCCONbits.IRCF1 = 1;
  1680     04EC  168F               	bsf	15,5	;volatile
  1681                           
  1682                           ;../SPI-Master.X/main.c: 105:     OSCCONbits.IRCF0 = 0;
  1683     04ED  120F               	bcf	15,4	;volatile
  1684                           
  1685                           ;../SPI-Master.X/main.c: 108:     OSCCONbits.SCS = 1;
  1686     04EE  140F               	bsf	15,0	;volatile
  1687     04EF                     l1187:
  1688                           
  1689                           ;../SPI-Master.X/main.c: 110:     ANSEL = 0;
  1690     04EF  1683               	bsf	3,5	;RP0=1, select bank3
  1691     04F0  1703               	bsf	3,6	;RP1=1, select bank3
  1692     04F1  0188               	clrf	8	;volatile
  1693                           
  1694                           ;../SPI-Master.X/main.c: 111:     ANSELH = 0;
  1695     04F2  0189               	clrf	9	;volatile
  1696     04F3                     l1189:
  1697                           
  1698                           ;../SPI-Master.X/main.c: 114:     TRISC2 = 0;
  1699     04F3  1683               	bsf	3,5	;RP0=1, select bank1
  1700     04F4  1303               	bcf	3,6	;RP1=0, select bank1
  1701     04F5  1107               	bcf	7,2	;volatile
  1702     04F6                     l1191:
  1703                           
  1704                           ;../SPI-Master.X/main.c: 115:     TRISC1 = 0;
  1705     04F6  1087               	bcf	7,1	;volatile
  1706                           
  1707                           ;../SPI-Master.X/main.c: 118:     TRISB = 0;
  1708     04F7  0186               	clrf	6	;volatile
  1709                           
  1710                           ;../SPI-Master.X/main.c: 119:     TRISD = 0;
  1711     04F8  0188               	clrf	8	;volatile
  1712                           
  1713                           ;../SPI-Master.X/main.c: 122:     PORTB = 0;
  1714     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1715     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1716     04FB  0186               	clrf	6	;volatile
  1717                           
  1718                           ;../SPI-Master.X/main.c: 123:     PORTD = 0;
  1719     04FC  0188               	clrf	8	;volatile
  1720     04FD                     l1193:
  1721                           
  1722                           ;../SPI-Master.X/main.c: 126:     PORTCbits.RC2 = 1;
  1723     04FD  1507               	bsf	7,2	;volatile
  1724     04FE                     l1195:
  1725                           
  1726                           ;../SPI-Master.X/main.c: 127:     PORTCbits.RC1 = 1;
  1727     04FE  1487               	bsf	7,1	;volatile
  1728     04FF                     l1197:
  1729                           
  1730                           ;../SPI-Master.X/main.c: 130:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, S
      +                          PI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1731     04FF  01F0               	clrf	spiInit@sDataSample
  1732     0500  01F1               	clrf	spiInit@sClockIdle
  1733     0501  01F2               	clrf	spiInit@sTransmitEdge
  1734     0502  3020               	movlw	32
  1735     0503  120A  118A  24B9  120A  118A  	fcall	_spiInit
  1736     0508                     l136:
  1737     0508  0008               	return
  1738     0509                     __end_of_setup:
  1739                           
  1740                           	psect	text8
  1741     04B9                     __ptext8:	
  1742 ;; *************** function _spiInit *****************
  1743 ;; Defined at:
  1744 ;;		line 12 in file "../SPI-Master.X/SPI.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  sType           1    wreg     enum E1292
  1747 ;;  sDataSample     1    0[COMMON] enum E1300
  1748 ;;  sClockIdle      1    1[COMMON] enum E1304
  1749 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  sType           1    3[COMMON] enum E1292
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         3       0       0       0       0
  1762 ;;      Locals:         1       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0
  1764 ;;      Totals:         4       0       0       0       0
  1765 ;;Total ram usage:        4 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_setup
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     04B9                     _spiInit:	
  1775                           ;psect for function _spiInit
  1776                           
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1780                           ;spiInit@sType stored from wreg
  1781     04B9  00F3               	movwf	spiInit@sType
  1782     04BA                     l1047:
  1783                           
  1784                           ;../SPI-Master.X/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Sp
      +                          i_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../SPI-Master.X/SPI.c: 13: {;.
      +                          ./SPI-Master.X/SPI.c: 14:     TRISC5 = 0;
  1785     04BA  1683               	bsf	3,5	;RP0=1, select bank1
  1786     04BB  1303               	bcf	3,6	;RP1=0, select bank1
  1787     04BC  1287               	bcf	7,5	;volatile
  1788                           
  1789                           ;../SPI-Master.X/SPI.c: 15:     if(sType & 0b00000100)
  1790     04BD  1D73               	btfss	spiInit@sType,2
  1791     04BE  2CC0               	goto	u351
  1792     04BF  2CC1               	goto	u350
  1793     04C0                     u351:
  1794     04C0  2CC5               	goto	l1053
  1795     04C1                     u350:
  1796     04C1                     l1049:
  1797                           
  1798                           ;../SPI-Master.X/SPI.c: 16:     {;../SPI-Master.X/SPI.c: 17:         SSPSTAT = sTransmit
      +                          Edge;
  1799     04C1  0872               	movf	spiInit@sTransmitEdge,w
  1800     04C2  0094               	movwf	20	;volatile
  1801     04C3                     l1051:
  1802                           
  1803                           ;../SPI-Master.X/SPI.c: 18:         TRISC3 = 1;
  1804     04C3  1587               	bsf	7,3	;volatile
  1805                           
  1806                           ;../SPI-Master.X/SPI.c: 19:     }
  1807     04C4  2CC9               	goto	l16
  1808     04C5                     l1053:
  1809                           
  1810                           ;../SPI-Master.X/SPI.c: 21:     {;../SPI-Master.X/SPI.c: 22:         SSPSTAT = sDataSamp
      +                          le | sTransmitEdge;
  1811     04C5  0870               	movf	spiInit@sDataSample,w
  1812     04C6  0472               	iorwf	spiInit@sTransmitEdge,w
  1813     04C7  0094               	movwf	20	;volatile
  1814     04C8                     l1055:
  1815                           
  1816                           ;../SPI-Master.X/SPI.c: 23:         TRISC3 = 0;
  1817     04C8  1187               	bcf	7,3	;volatile
  1818     04C9                     l16:	
  1819                           ;../SPI-Master.X/SPI.c: 24:     }
  1820                           
  1821                           
  1822                           ;../SPI-Master.X/SPI.c: 26:     SSPCON = sType | sClockIdle;
  1823     04C9  0873               	movf	spiInit@sType,w
  1824     04CA  0471               	iorwf	spiInit@sClockIdle,w
  1825     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1826     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1827     04CD  0094               	movwf	20	;volatile
  1828     04CE                     l17:
  1829     04CE  0008               	return
  1830     04CF                     __end_of_spiInit:
  1831                           
  1832                           	psect	text9
  1833     0509                     __ptext9:	
  1834 ;; *************** function _Lcd_Write_String *****************
  1835 ;; Defined at:
  1836 ;;		line 98 in file "../SPI-Master.X/LCD.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  a               1    wreg     PTR unsigned char 
  1839 ;;		 -> buffer(20), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  a               1    8[COMMON] PTR unsigned char 
  1842 ;;		 -> buffer(20), 
  1843 ;;  i               2    6[COMMON] int 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       0       0       0
  1854 ;;      Locals:         3       0       0       0       0
  1855 ;;      Temps:          1       0       0       0       0
  1856 ;;      Totals:         4       0       0       0       0
  1857 ;;Total ram usage:        4 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; Hardware stack levels required when called: 2
  1860 ;; This function calls:
  1861 ;;		_Lcd_Write_Char
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867     0509                     _Lcd_Write_String:	
  1868                           ;psect for function _Lcd_Write_String
  1869                           
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1873                           ;Lcd_Write_String@a stored from wreg
  1874     0509  00F8               	movwf	Lcd_Write_String@a
  1875     050A                     l1177:
  1876                           
  1877                           ;../SPI-Master.X/LCD.c: 99:     int i;;../SPI-Master.X/LCD.c: 100:     for (i = 0; a[i] 
      +                          != '\0'; i++)
  1878     050A  01F6               	clrf	Lcd_Write_String@i
  1879     050B  01F7               	clrf	Lcd_Write_String@i+1
  1880     050C  2D1E               	goto	l1183
  1881     050D                     l1179:
  1882                           
  1883                           ;../SPI-Master.X/LCD.c: 101:         Lcd_Write_Char(a[i]);
  1884     050D  0876               	movf	Lcd_Write_String@i,w
  1885     050E  0778               	addwf	Lcd_Write_String@a,w
  1886     050F  00F5               	movwf	??_Lcd_Write_String
  1887     0510  0875               	movf	??_Lcd_Write_String,w
  1888     0511  0084               	movwf	4
  1889     0512  0800               	movf	0,w
  1890     0513  120A  118A  254C  120A  118A  	fcall	_Lcd_Write_Char
  1891     0518                     l1181:
  1892     0518  3001               	movlw	1
  1893     0519  07F6               	addwf	Lcd_Write_String@i,f
  1894     051A  1803               	skipnc
  1895     051B  0AF7               	incf	Lcd_Write_String@i+1,f
  1896     051C  3000               	movlw	0
  1897     051D  07F7               	addwf	Lcd_Write_String@i+1,f
  1898     051E                     l1183:
  1899     051E  0876               	movf	Lcd_Write_String@i,w
  1900     051F  0778               	addwf	Lcd_Write_String@a,w
  1901     0520  00F5               	movwf	??_Lcd_Write_String
  1902     0521  0875               	movf	??_Lcd_Write_String,w
  1903     0522  0084               	movwf	4
  1904     0523  1383               	bcf	3,7	;select IRP bank0
  1905     0524  0800               	movf	0,w
  1906     0525  1D03               	btfss	3,2
  1907     0526  2D28               	goto	u551
  1908     0527  2D29               	goto	u550
  1909     0528                     u551:
  1910     0528  2D0D               	goto	l1179
  1911     0529                     u550:
  1912     0529                     l75:
  1913     0529  0008               	return
  1914     052A                     __end_of_Lcd_Write_String:
  1915                           
  1916                           	psect	text10
  1917     054C                     __ptext10:	
  1918 ;; *************** function _Lcd_Write_Char *****************
  1919 ;; Defined at:
  1920 ;;		line 83 in file "../SPI-Master.X/LCD.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  a               1    wreg     unsigned char 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  a               1    4[COMMON] unsigned char 
  1925 ;;  y               1    3[COMMON] unsigned char 
  1926 ;;  temp            1    2[COMMON] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         3       0       0       0       0
  1938 ;;      Temps:          1       0       0       0       0
  1939 ;;      Totals:         4       0       0       0       0
  1940 ;;Total ram usage:        4 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 1
  1943 ;; This function calls:
  1944 ;;		_Lcd_Port
  1945 ;; This function is called by:
  1946 ;;		_Lcd_Write_String
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     054C                     _Lcd_Write_Char:	
  1951                           ;psect for function _Lcd_Write_Char
  1952                           
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1956                           ;Lcd_Write_Char@a stored from wreg
  1957     054C  00F4               	movwf	Lcd_Write_Char@a
  1958     054D                     l1069:
  1959                           
  1960                           ;../SPI-Master.X/LCD.c: 84:     char temp, y;;../SPI-Master.X/LCD.c: 85:     temp = a & 
      +                          0x0F;
  1961     054D  0874               	movf	Lcd_Write_Char@a,w
  1962     054E  390F               	andlw	15
  1963     054F  00F2               	movwf	Lcd_Write_Char@temp
  1964                           
  1965                           ;../SPI-Master.X/LCD.c: 86:     y = a & 0xF0;
  1966     0550  0874               	movf	Lcd_Write_Char@a,w
  1967     0551  39F0               	andlw	240
  1968     0552  00F3               	movwf	Lcd_Write_Char@y
  1969     0553                     l1071:
  1970                           
  1971                           ;../SPI-Master.X/LCD.c: 87:     PORTDbits.RD6 = 1;
  1972     0553  1283               	bcf	3,5	;RP0=0, select bank0
  1973     0554  1303               	bcf	3,6	;RP1=0, select bank0
  1974     0555  1708               	bsf	8,6	;volatile
  1975     0556                     l1073:
  1976                           
  1977                           ;../SPI-Master.X/LCD.c: 88:     Lcd_Port(y >> 4);
  1978     0556  0873               	movf	Lcd_Write_Char@y,w
  1979     0557  00F1               	movwf	??_Lcd_Write_Char
  1980     0558  3004               	movlw	4
  1981     0559                     u375:
  1982     0559  1003               	clrc
  1983     055A  0CF1               	rrf	??_Lcd_Write_Char,f
  1984     055B  3EFF               	addlw	-1
  1985     055C  1D03               	skipz
  1986     055D  2D59               	goto	u375
  1987     055E  0871               	movf	??_Lcd_Write_Char,w
  1988     055F  120A  118A  252A  120A  118A  	fcall	_Lcd_Port
  1989     0564                     l1075:
  1990                           
  1991                           ;../SPI-Master.X/LCD.c: 89:     PORTDbits.RD7 = 1;
  1992     0564  1283               	bcf	3,5	;RP0=0, select bank0
  1993     0565  1303               	bcf	3,6	;RP1=0, select bank0
  1994     0566  1788               	bsf	8,7	;volatile
  1995     0567                     l1077:
  1996                           
  1997                           ;../SPI-Master.X/LCD.c: 90:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1998     0567  300D               	movlw	13
  1999     0568  00F1               	movwf	??_Lcd_Write_Char
  2000     0569                     u657:
  2001     0569  0BF1               	decfsz	??_Lcd_Write_Char,f
  2002     056A  2D69               	goto	u657
  2003     056B                     l1079:
  2004                           
  2005                           ;../SPI-Master.X/LCD.c: 91:     PORTDbits.RD7 = 0;
  2006     056B  1283               	bcf	3,5	;RP0=0, select bank0
  2007     056C  1303               	bcf	3,6	;RP1=0, select bank0
  2008     056D  1388               	bcf	8,7	;volatile
  2009     056E                     l1081:
  2010                           
  2011                           ;../SPI-Master.X/LCD.c: 92:     Lcd_Port(temp);
  2012     056E  0872               	movf	Lcd_Write_Char@temp,w
  2013     056F  120A  118A  252A  120A  118A  	fcall	_Lcd_Port
  2014     0574                     l1083:
  2015                           
  2016                           ;../SPI-Master.X/LCD.c: 93:     PORTDbits.RD7 = 1;
  2017     0574  1283               	bcf	3,5	;RP0=0, select bank0
  2018     0575  1303               	bcf	3,6	;RP1=0, select bank0
  2019     0576  1788               	bsf	8,7	;volatile
  2020     0577                     l1085:
  2021                           
  2022                           ;../SPI-Master.X/LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2023     0577  300D               	movlw	13
  2024     0578  00F1               	movwf	??_Lcd_Write_Char
  2025     0579                     u667:
  2026     0579  0BF1               	decfsz	??_Lcd_Write_Char,f
  2027     057A  2D79               	goto	u667
  2028     057B                     l1087:
  2029                           
  2030                           ;../SPI-Master.X/LCD.c: 95:     PORTDbits.RD7 = 0;
  2031     057B  1283               	bcf	3,5	;RP0=0, select bank0
  2032     057C  1303               	bcf	3,6	;RP1=0, select bank0
  2033     057D  1388               	bcf	8,7	;volatile
  2034     057E                     l69:
  2035     057E  0008               	return
  2036     057F                     __end_of_Lcd_Write_Char:
  2037                           
  2038                           	psect	text11
  2039     05FD                     __ptext11:	
  2040 ;; *************** function _Lcd_Set_Cursor *****************
  2041 ;; Defined at:
  2042 ;;		line 48 in file "../SPI-Master.X/LCD.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  a               1    wreg     unsigned char 
  2045 ;;  b               1    4[COMMON] unsigned char 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  a               1    6[COMMON] unsigned char 
  2048 ;;  temp            1    9[COMMON] unsigned char 
  2049 ;;  y               1    8[COMMON] unsigned char 
  2050 ;;  z               1    7[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         1       0       0       0       0
  2061 ;;      Locals:         4       0       0       0       0
  2062 ;;      Temps:          1       0       0       0       0
  2063 ;;      Totals:         6       0       0       0       0
  2064 ;;Total ram usage:        6 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 2
  2067 ;; This function calls:
  2068 ;;		_Lcd_Cmd
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074     05FD                     _Lcd_Set_Cursor:	
  2075                           ;psect for function _Lcd_Set_Cursor
  2076                           
  2077                           
  2078                           ;incstack = 0
  2079                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2080                           ;Lcd_Set_Cursor@a stored from wreg
  2081     05FD  00F6               	movwf	Lcd_Set_Cursor@a
  2082     05FE                     l1145:
  2083                           
  2084                           ;../SPI-Master.X/LCD.c: 49:     char temp, z, y;;../SPI-Master.X/LCD.c: 50:     if (a ==
      +                           1) {
  2085     05FE  0376               	decf	Lcd_Set_Cursor@a,w
  2086     05FF  1D03               	btfss	3,2
  2087     0600  2E02               	goto	u511
  2088     0601  2E03               	goto	u510
  2089     0602                     u511:
  2090     0602  2E20               	goto	l1155
  2091     0603                     u510:
  2092     0603                     l1147:
  2093                           
  2094                           ;../SPI-Master.X/LCD.c: 51:         temp = 0x80 + b - 1;
  2095     0603  0874               	movf	Lcd_Set_Cursor@b,w
  2096     0604  3E7F               	addlw	127
  2097     0605  00F9               	movwf	Lcd_Set_Cursor@temp
  2098                           
  2099                           ;../SPI-Master.X/LCD.c: 52:         z = temp >> 4;
  2100     0606  0879               	movf	Lcd_Set_Cursor@temp,w
  2101     0607  00F5               	movwf	??_Lcd_Set_Cursor
  2102     0608  3004               	movlw	4
  2103     0609                     u525:
  2104     0609  1003               	clrc
  2105     060A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2106     060B  3EFF               	addlw	-1
  2107     060C  1D03               	skipz
  2108     060D  2E09               	goto	u525
  2109     060E  0875               	movf	??_Lcd_Set_Cursor,w
  2110     060F  00F7               	movwf	Lcd_Set_Cursor@z
  2111     0610                     l1149:
  2112                           
  2113                           ;../SPI-Master.X/LCD.c: 53:         y = temp & 0x0F;
  2114     0610  0879               	movf	Lcd_Set_Cursor@temp,w
  2115     0611  390F               	andlw	15
  2116     0612  00F8               	movwf	Lcd_Set_Cursor@y
  2117     0613                     l1151:
  2118                           
  2119                           ;../SPI-Master.X/LCD.c: 54:         Lcd_Cmd(z);
  2120     0613  0877               	movf	Lcd_Set_Cursor@z,w
  2121     0614  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2122     0619                     l1153:
  2123                           
  2124                           ;../SPI-Master.X/LCD.c: 55:         Lcd_Cmd(y);
  2125     0619  0878               	movf	Lcd_Set_Cursor@y,w
  2126     061A  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2127                           
  2128                           ;../SPI-Master.X/LCD.c: 56:     } else if (a == 2) {
  2129     061F  2E42               	goto	l63
  2130     0620                     l1155:
  2131     0620  3002               	movlw	2
  2132     0621  0676               	xorwf	Lcd_Set_Cursor@a,w
  2133     0622  1D03               	btfss	3,2
  2134     0623  2E25               	goto	u531
  2135     0624  2E26               	goto	u530
  2136     0625                     u531:
  2137     0625  2E42               	goto	l63
  2138     0626                     u530:
  2139     0626                     l1157:
  2140                           
  2141                           ;../SPI-Master.X/LCD.c: 57:         temp = 0xC0 + b - 1;
  2142     0626  0874               	movf	Lcd_Set_Cursor@b,w
  2143     0627  3EBF               	addlw	191
  2144     0628  00F9               	movwf	Lcd_Set_Cursor@temp
  2145                           
  2146                           ;../SPI-Master.X/LCD.c: 58:         z = temp >> 4;
  2147     0629  0879               	movf	Lcd_Set_Cursor@temp,w
  2148     062A  00F5               	movwf	??_Lcd_Set_Cursor
  2149     062B  3004               	movlw	4
  2150     062C                     u545:
  2151     062C  1003               	clrc
  2152     062D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2153     062E  3EFF               	addlw	-1
  2154     062F  1D03               	skipz
  2155     0630  2E2C               	goto	u545
  2156     0631  0875               	movf	??_Lcd_Set_Cursor,w
  2157     0632  00F7               	movwf	Lcd_Set_Cursor@z
  2158     0633                     l1159:
  2159                           
  2160                           ;../SPI-Master.X/LCD.c: 59:         y = temp & 0x0F;
  2161     0633  0879               	movf	Lcd_Set_Cursor@temp,w
  2162     0634  390F               	andlw	15
  2163     0635  00F8               	movwf	Lcd_Set_Cursor@y
  2164     0636                     l1161:
  2165                           
  2166                           ;../SPI-Master.X/LCD.c: 60:         Lcd_Cmd(z);
  2167     0636  0877               	movf	Lcd_Set_Cursor@z,w
  2168     0637  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2169     063C                     l1163:
  2170                           
  2171                           ;../SPI-Master.X/LCD.c: 61:         Lcd_Cmd(y);
  2172     063C  0878               	movf	Lcd_Set_Cursor@y,w
  2173     063D  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2174     0642                     l63:
  2175     0642  0008               	return
  2176     0643                     __end_of_Lcd_Set_Cursor:
  2177                           
  2178                           	psect	text12
  2179     0643                     __ptext12:	
  2180 ;; *************** function _Lcd_Init *****************
  2181 ;; Defined at:
  2182 ;;		line 65 in file "../SPI-Master.X/LCD.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0
  2198 ;;      Temps:          2       0       0       0       0
  2199 ;;      Totals:         2       0       0       0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 2
  2203 ;; This function calls:
  2204 ;;		_Lcd_Cmd
  2205 ;;		_Lcd_Port
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211     0643                     _Lcd_Init:	
  2212                           ;psect for function _Lcd_Init
  2213                           
  2214     0643                     l1165:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2217                           
  2218                           
  2219                           ;../SPI-Master.X/LCD.c: 66:     Lcd_Port(0x00);
  2220     0643  3000               	movlw	0
  2221     0644  120A  118A  252A  120A  118A  	fcall	_Lcd_Port
  2222     0649                     l1167:
  2223                           
  2224                           ;../SPI-Master.X/LCD.c: 67:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2225     0649  301A               	movlw	26
  2226     064A  00F5               	movwf	??_Lcd_Init+1
  2227     064B  30F8               	movlw	248
  2228     064C  00F4               	movwf	??_Lcd_Init
  2229     064D                     u677:
  2230     064D  0BF4               	decfsz	??_Lcd_Init,f
  2231     064E  2E4D               	goto	u677
  2232     064F  0BF5               	decfsz	??_Lcd_Init+1,f
  2233     0650  2E4D               	goto	u677
  2234     0651  0000               	nop
  2235     0652                     l1169:
  2236                           
  2237                           ;../SPI-Master.X/LCD.c: 68:     Lcd_Cmd(0x03);
  2238     0652  3003               	movlw	3
  2239     0653  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2240                           
  2241                           ;../SPI-Master.X/LCD.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2242     0658  3007               	movlw	7
  2243     0659  00F5               	movwf	??_Lcd_Init+1
  2244     065A  307D               	movlw	125
  2245     065B  00F4               	movwf	??_Lcd_Init
  2246     065C                     u687:
  2247     065C  0BF4               	decfsz	??_Lcd_Init,f
  2248     065D  2E5C               	goto	u687
  2249     065E  0BF5               	decfsz	??_Lcd_Init+1,f
  2250     065F  2E5C               	goto	u687
  2251     0660                     l1171:
  2252                           
  2253                           ;../SPI-Master.X/LCD.c: 70:     Lcd_Cmd(0x03);
  2254     0660  3003               	movlw	3
  2255     0661  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2256     0666                     l1173:
  2257                           
  2258                           ;../SPI-Master.X/LCD.c: 71:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2259     0666  3042               	movlw	66
  2260     0667  00F4               	movwf	??_Lcd_Init
  2261     0668                     u697:
  2262     0668  0BF4               	decfsz	??_Lcd_Init,f
  2263     0669  2E68               	goto	u697
  2264     066A  0000               	nop
  2265                           
  2266                           ;../SPI-Master.X/LCD.c: 72:     Lcd_Cmd(0x03);
  2267     066B  3003               	movlw	3
  2268     066C  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2269                           
  2270                           ;../SPI-Master.X/LCD.c: 73:     Lcd_Cmd(0x02);
  2271     0671  3002               	movlw	2
  2272     0672  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2273                           
  2274                           ;../SPI-Master.X/LCD.c: 74:     Lcd_Cmd(0x02);
  2275     0677  3002               	movlw	2
  2276     0678  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2277                           
  2278                           ;../SPI-Master.X/LCD.c: 75:     Lcd_Cmd(0x08);
  2279     067D  3008               	movlw	8
  2280     067E  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2281                           
  2282                           ;../SPI-Master.X/LCD.c: 76:     Lcd_Cmd(0x00);
  2283     0683  3000               	movlw	0
  2284     0684  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2285                           
  2286                           ;../SPI-Master.X/LCD.c: 77:     Lcd_Cmd(0x0C);
  2287     0689  300C               	movlw	12
  2288     068A  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2289                           
  2290                           ;../SPI-Master.X/LCD.c: 78:     Lcd_Cmd(0x00);
  2291     068F  3000               	movlw	0
  2292     0690  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2293                           
  2294                           ;../SPI-Master.X/LCD.c: 79:     Lcd_Cmd(0x06);
  2295     0695  3006               	movlw	6
  2296     0696  120A  118A  24CF  120A  118A  	fcall	_Lcd_Cmd
  2297     069B                     l1175:
  2298                           
  2299                           ;../SPI-Master.X/LCD.c: 80:  _delay((unsigned long)((100)*(4000000/4000000.0)));
  2300     069B  3021               	movlw	33
  2301     069C  00F4               	movwf	??_Lcd_Init
  2302     069D                     u707:
  2303     069D  0BF4               	decfsz	??_Lcd_Init,f
  2304     069E  2E9D               	goto	u707
  2305     069F                     l66:
  2306     069F  0008               	return
  2307     06A0                     __end_of_Lcd_Init:
  2308                           
  2309                           	psect	text13
  2310     04CF                     __ptext13:	
  2311 ;; *************** function _Lcd_Cmd *****************
  2312 ;; Defined at:
  2313 ;;		line 35 in file "../SPI-Master.X/LCD.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  a               1    wreg     unsigned char 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  a               1    3[COMMON] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       0       0       0       0
  2328 ;;      Locals:         1       0       0       0       0
  2329 ;;      Temps:          2       0       0       0       0
  2330 ;;      Totals:         3       0       0       0       0
  2331 ;;Total ram usage:        3 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 1
  2334 ;; This function calls:
  2335 ;;		_Lcd_Port
  2336 ;; This function is called by:
  2337 ;;		_Lcd_Set_Cursor
  2338 ;;		_Lcd_Init
  2339 ;;		_Lcd_Clear
  2340 ;;		_Lcd_Shift_Right
  2341 ;;		_Lcd_Shift_Left
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345     04CF                     _Lcd_Cmd:	
  2346                           ;psect for function _Lcd_Cmd
  2347                           
  2348                           
  2349                           ;incstack = 0
  2350                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2351                           ;Lcd_Cmd@a stored from wreg
  2352     04CF  00F3               	movwf	Lcd_Cmd@a
  2353     04D0                     l1059:
  2354                           
  2355                           ;../SPI-Master.X/LCD.c: 36:     PORTDbits.RD6 = 0;
  2356     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2357     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2358     04D2  1308               	bcf	8,6	;volatile
  2359     04D3                     l1061:
  2360                           
  2361                           ;../SPI-Master.X/LCD.c: 37:     Lcd_Port(a);
  2362     04D3  0873               	movf	Lcd_Cmd@a,w
  2363     04D4  120A  118A  252A  120A  118A  	fcall	_Lcd_Port
  2364     04D9                     l1063:
  2365                           
  2366                           ;../SPI-Master.X/LCD.c: 38:     PORTDbits.RD7 = 1;
  2367     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2368     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2369     04DB  1788               	bsf	8,7	;volatile
  2370     04DC                     l1065:
  2371                           
  2372                           ;../SPI-Master.X/LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2373     04DC  3006               	movlw	6
  2374     04DD  00F2               	movwf	??_Lcd_Cmd+1
  2375     04DE  3030               	movlw	48
  2376     04DF  00F1               	movwf	??_Lcd_Cmd
  2377     04E0                     u717:
  2378     04E0  0BF1               	decfsz	??_Lcd_Cmd,f
  2379     04E1  2CE0               	goto	u717
  2380     04E2  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2381     04E3  2CE0               	goto	u717
  2382     04E4  0000               	nop
  2383     04E5                     l1067:
  2384                           
  2385                           ;../SPI-Master.X/LCD.c: 40:     PORTDbits.RD7 = 0;
  2386     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2387     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2388     04E7  1388               	bcf	8,7	;volatile
  2389     04E8                     l54:
  2390     04E8  0008               	return
  2391     04E9                     __end_of_Lcd_Cmd:
  2392                           
  2393                           	psect	text14
  2394     052A                     __ptext14:	
  2395 ;; *************** function _Lcd_Port *****************
  2396 ;; Defined at:
  2397 ;;		line 13 in file "../SPI-Master.X/LCD.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  a               1    wreg     unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  a               1    0[COMMON] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       0       0       0       0
  2412 ;;      Locals:         1       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0
  2414 ;;      Totals:         1       0       0       0       0
  2415 ;;Total ram usage:        1 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_Lcd_Cmd
  2421 ;;		_Lcd_Init
  2422 ;;		_Lcd_Write_Char
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426     052A                     _Lcd_Port:	
  2427                           ;psect for function _Lcd_Port
  2428                           
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in _Lcd_Port: [wreg]
  2432                           ;Lcd_Port@a stored from wreg
  2433     052A  00F0               	movwf	Lcd_Port@a
  2434     052B                     l1037:
  2435                           
  2436                           ;../SPI-Master.X/LCD.c: 14:     if (a & 1)
  2437     052B  1C70               	btfss	Lcd_Port@a,0
  2438     052C  2D2E               	goto	u311
  2439     052D  2D2F               	goto	u310
  2440     052E                     u311:
  2441     052E  2D33               	goto	l43
  2442     052F                     u310:
  2443     052F                     l1039:
  2444                           
  2445                           ;../SPI-Master.X/LCD.c: 15:         PORTBbits.RB4 = 1;
  2446     052F  1283               	bcf	3,5	;RP0=0, select bank0
  2447     0530  1303               	bcf	3,6	;RP1=0, select bank0
  2448     0531  1606               	bsf	6,4	;volatile
  2449     0532  2D36               	goto	l44
  2450     0533                     l43:	
  2451                           ;../SPI-Master.X/LCD.c: 16:     else
  2452                           
  2453                           
  2454                           ;../SPI-Master.X/LCD.c: 17:         PORTBbits.RB4 = 0;
  2455     0533  1283               	bcf	3,5	;RP0=0, select bank0
  2456     0534  1303               	bcf	3,6	;RP1=0, select bank0
  2457     0535  1206               	bcf	6,4	;volatile
  2458     0536                     l44:
  2459                           
  2460                           ;../SPI-Master.X/LCD.c: 19:     if (a & 2)
  2461     0536  1CF0               	btfss	Lcd_Port@a,1
  2462     0537  2D39               	goto	u321
  2463     0538  2D3A               	goto	u320
  2464     0539                     u321:
  2465     0539  2D3C               	goto	l45
  2466     053A                     u320:
  2467     053A                     l1041:
  2468                           
  2469                           ;../SPI-Master.X/LCD.c: 20:         PORTBbits.RB5 = 1;
  2470     053A  1686               	bsf	6,5	;volatile
  2471     053B  2D3D               	goto	l46
  2472     053C                     l45:	
  2473                           ;../SPI-Master.X/LCD.c: 21:     else
  2474                           
  2475                           
  2476                           ;../SPI-Master.X/LCD.c: 22:         PORTBbits.RB5 = 0;
  2477     053C  1286               	bcf	6,5	;volatile
  2478     053D                     l46:
  2479                           
  2480                           ;../SPI-Master.X/LCD.c: 24:     if (a & 4)
  2481     053D  1D70               	btfss	Lcd_Port@a,2
  2482     053E  2D40               	goto	u331
  2483     053F  2D41               	goto	u330
  2484     0540                     u331:
  2485     0540  2D43               	goto	l47
  2486     0541                     u330:
  2487     0541                     l1043:
  2488                           
  2489                           ;../SPI-Master.X/LCD.c: 25:         PORTBbits.RB6 = 1;
  2490     0541  1706               	bsf	6,6	;volatile
  2491     0542  2D44               	goto	l48
  2492     0543                     l47:	
  2493                           ;../SPI-Master.X/LCD.c: 26:     else
  2494                           
  2495                           
  2496                           ;../SPI-Master.X/LCD.c: 27:         PORTBbits.RB6 = 0;
  2497     0543  1306               	bcf	6,6	;volatile
  2498     0544                     l48:
  2499                           
  2500                           ;../SPI-Master.X/LCD.c: 29:     if (a & 8)
  2501     0544  1DF0               	btfss	Lcd_Port@a,3
  2502     0545  2D47               	goto	u341
  2503     0546  2D48               	goto	u340
  2504     0547                     u341:
  2505     0547  2D4A               	goto	l49
  2506     0548                     u340:
  2507     0548                     l1045:
  2508                           
  2509                           ;../SPI-Master.X/LCD.c: 30:         PORTBbits.RB7 = 1;
  2510     0548  1786               	bsf	6,7	;volatile
  2511     0549  2D4B               	goto	l51
  2512     054A                     l49:	
  2513                           ;../SPI-Master.X/LCD.c: 31:     else
  2514                           
  2515                           
  2516                           ;../SPI-Master.X/LCD.c: 32:         PORTBbits.RB7 = 0;
  2517     054A  1386               	bcf	6,7	;volatile
  2518     054B                     l51:
  2519     054B  0008               	return
  2520     054C                     __end_of_Lcd_Port:
  2521     007E                     btemp	set	126	;btemp
  2522     007E                     wtemp0	set	126
  2523                           
  2524                           	psect	idloc
  2525                           
  2526                           ;Config register IDLOC0 @ 0x2000
  2527                           ;	unspecified, using default values
  2528     2000                     	org	8192
  2529     2000  3FFF               	dw	16383
  2530                           
  2531                           ;Config register IDLOC1 @ 0x2001
  2532                           ;	unspecified, using default values
  2533     2001                     	org	8193
  2534     2001  3FFF               	dw	16383
  2535                           
  2536                           ;Config register IDLOC2 @ 0x2002
  2537                           ;	unspecified, using default values
  2538     2002                     	org	8194
  2539     2002  3FFF               	dw	16383
  2540                           
  2541                           ;Config register IDLOC3 @ 0x2003
  2542                           ;	unspecified, using default values
  2543     2003                     	org	8195
  2544     2003  3FFF               	dw	16383
  2545                           
  2546                           	psect	config
  2547                           
  2548                           ;Config register CONFIG1 @ 0x2007
  2549                           ;	Oscillator Selection bits
  2550                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2551                           ;	Watchdog Timer Enable bit
  2552                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2553                           ;	Power-up Timer Enable bit
  2554                           ;	PWRTE = OFF, PWRT disabled
  2555                           ;	RE3/MCLR pin function select bit
  2556                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2557                           ;	Code Protection bit
  2558                           ;	CP = OFF, Program memory code protection is disabled
  2559                           ;	Data Code Protection bit
  2560                           ;	CPD = OFF, Data memory code protection is disabled
  2561                           ;	Brown Out Reset Selection bits
  2562                           ;	BOREN = OFF, BOR disabled
  2563                           ;	Internal External Switchover bit
  2564                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2565                           ;	Fail-Safe Clock Monitor Enabled bit
  2566                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2567                           ;	Low Voltage Programming Enable bit
  2568                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2569                           ;	In-Circuit Debugger Mode bit
  2570                           ;	DEBUG = 0x1, unprogramme  2571     2007                     	org	8199
  2572     2007  20D4               	dw	8404
  2573                           
  2574                           ;Config register CONFIG2 @ 0x2008
  2575                           ;	Brown-out Reset Selection bit
  2576                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2577                           ;	Flash Program Memory Self Write Enable bits
  2578                           ;	WRT = OFF, Write protection off
  2579     2008                     	org	8200
  2580     2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    10
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[16]), STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2676
                                             13 BANK0      2     2      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1230
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 04 21:11:23 2023

                       pc 0002               _SSPSTATbits 0094                        l20 04A1  
                      l23 04A7                        l16 04C9                        l17 04CE  
                      l34 04B8                        l26 04A0                        l51 054B  
                      l43 0533                        l44 0536                        l45 053C  
                      l46 053D                        l54 04E8                        l47 0543  
                      l63 0642                        l48 0544                        l49 054A  
                      l66 069F                        l75 0529                        l69 057E  
                      fsr 0004                       l136 0508                       l243 07F2  
                     l519 05FC                       l529 05B8                       u310 052F  
                     u311 052E                       u320 053A                       u400 05D3  
                     u321 0539                       u401 05D2                       u330 0541  
                     u331 0540                       u340 0548                       u420 05E4  
                     u500 05B4                       u341 0547                       u421 05E3  
                     u501 05B3                       u510 0603                       u350 04C1  
                     u511 0602                       u351 04C0                       u415 05D4  
                     u360 04A7                       u440 05F8                       u600 07EE  
                     u361 04A6                       u441 05F7                       u425 05E0  
                     u601 07ED                       u530 0626                       u450 0585  
                     u531 0625                       u435 05EC                       u451 0584  
                     u380 05C1                       u525 0609                       u381 05C0  
                     u550 0529                       u470 0597                       u375 0559  
                     u551 0528                       u471 0596                       u480 05A1  
                     u560 073E                       u545 062C                       u481 05A0  
                     u465 0589                       u561 073D                       u617 06B1  
                     u570 0792                       u707 069D                       u395 05C5  
                     u571 0791                       u627 06E6                       u580 079D  
                     u717 04E0                       u485 059D                       u581 079C  
                     u637 06F2                       u590 07DE                       u495 05A8  
                     u591 07DD                       u575 078E                       u647 0727  
                     u657 0569                       u667 0579                       u677 064D  
                     u687 065C                       u697 0668                       fsr0 0004  
                     indf 0000                      l1101 05D3                      l1103 05E4  
                    l1111 05F8                      l1041 053A                      l1105 05EA  
                    l1121 058F                      l1201 0738                      l1043 0541  
                    l1051 04C3                      l1107 05EB                      l1131 05AE  
                    l1123 0593                      l1115 057F                      l1203 073E  
                    l1045 0548                      l1037 052B                      l1061 04D3  
                    l1053 04C5                      l1141 04B5                      l1109 05F2  
                    l1125 0597                      l1117 0585                      l1133 05B4  
                    l1213 074F                      l1205 0743                      l1039 052F  
                    l1063 04D9                      l1151 0613                      l1071 0553  
                    l1055 04C8                      l1047 04BA                      l1127 05A1  
                    l1119 0588                      l1231 079D                      l1215 0769  
                    l1207 0748                      l1065 04DC                      l1161 0636  
                    l1153 0619                      l1145 05FE                      l1081 056E  
                    l1073 0556                      l1049 04C1                      l1057 04A1  
                    l1137 049C                      l1129 05A7                      l1233 07A0  
                    l1225 0777                      l1217 0771                      l1209 074A  
                    l1241 07DE                      l1067 04E5                      l1059 04D0  
                    l1171 0660                      l1163 063C                      l1147 0603  
                    l1155 0620                      l1083 0574                      l1075 0564  
                    l1139 04B0                      l1091 05BB                      l1235 07CC  
                    l1219 0775                      l1243 07EE                      l1315 0761  
                    l1173 0666                      l1165 0643                      l1157 0626  
                    l1149 0610                      l1085 0577                      l1077 0567  
                    l1069 054D                      l1181 0518                      l1093 05C1  
                    l1237 07D1                      l1229 0793                      l1261 06AD  
                    l1175 069B                      l1167 0649                      l1159 0633  
                    l1087 057B                      l1079 056B                      l1183 051E  
                    l1191 04F6                      l1095 05C4                      l1239 07D5  
                    l1271 06DC                      l1263 06B5                      l1169 0652  
                    l1177 050A                      l1193 04FD                      l1185 04E9  
                    l1097 05CB                      l1089 05B9                      l1281 06F6  
                    l1273 06E2                      l1265 06BB                      l1257 06A0  
                    l1179 050D                      l1195 04FE                      l1187 04EF  
                    l1099 05CF                      l1291 0723                      l1283 06FC  
                    l1275 06EA                      l1267 06C3                      l1259 06AA  
                    l1197 04FF                      l1189 04F3                      l1293 072B  
                    l1285 0704                      l1277 06ED                      l1269 06CB  
                    l1199 0735                      l1287 070C                      l1279 06EE  
                    l1289 071D                      STR_1 0013                      STR_2 0025  
       ?_Lcd_Write_String 0070                      _main 06A0                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 04E9  
                   ?_main 0070                     _ANSEL 0188           __end_of___lwdiv 05FD  
         __end_of___lwmod 05B9                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088           __end_of_dpowers 0013  
                   _setup 04E9                     pclath 000A           __end_of_spiInit 04CF  
         __end_of_spiRead 04B9                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07F3          __end_of_Lcd_Init 06A0          __end_of_Lcd_Port 054C  
         __initialization 07F3              __end_of_main 0732                    ??_main 0043  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
                  _dato_1 0021                    _dato_2 0020                 ??___lwdiv 0074  
               ??___lwmod 007C                    _buffer 0022          __end_of_spiWrite 04A1  
               ??_spiInit 0073                 ??_spiRead 0070                 ??_sprintf 0039  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 0509            _Lcd_Set_Cursor 05FD                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0074                __pbssBANK0 0020  
              __pmaintext 06A0    __end_of_Lcd_Set_Cursor 0643                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 054C                   _Lcd_Cmd 04CF                 ?_spiWrite 0070  
                 ___lwdiv 05B9                   ___lwmod 057F           ?_Lcd_Set_Cursor 0074  
                 __ptext1 0732                   __ptext2 057F                   __ptext3 05B9  
                 __ptext4 049B                   __ptext5 04B0                   __ptext6 04A1  
                 __ptext7 04E9                   __ptext8 04B9                   __ptext9 0509  
                 _dpowers 0009                   _spiInit 04B9                   _spiRead 04B0  
                 _sprintf 0732                   clrloop0 04A9    __end_of_Lcd_Write_Char 057F  
    end_of_initialization 07FC                ??_spiWrite 0070                 Lcd_Port@a 0070  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0078  
       Lcd_Write_String@i 0076            _spiReceiveWait 04A1          _Lcd_Write_String 0509  
     start_initialization 07F3    __end_of_spiReceiveWait 04A8           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 0036  
                ?_Lcd_Cmd 0070               sprintf@flag 003C               sprintf@prec 0040  
        ___lwdiv@dividend 0072           ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0075  
                ?___lwdiv 0070                  ?___lwmod 0078                 __pstrings 0003  
                ?_spiInit 0070                  ?_spiRead 0070          ___lwdiv@quotient 0075  
                ?_sprintf 0036      spiInit@sTransmitEdge 0072                 clear_ram0 04A8  
      spiInit@sDataSample 0070                  Lcd_Cmd@a 0073               __stringbase 0008  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 0643                  _Lcd_Port 052A  
__end_of_Lcd_Write_String 052A        __end_of__stringtab 0009                sprintf@val 003E  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 054C  
                __ptext11 05FD                  __ptext12 0643                  __ptext13 04CF  
                __ptext14 052A                  _spiWrite 049B              spiInit@sType 0073  
       spiInit@sClockIdle 0071        Lcd_Write_Char@temp 0072                 sprintf@ap 003D  
               sprintf@sp 0041          ___lwmod@dividend 007A          ??_spiReceiveWait 0070  
               stringcode 0003                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                sprintf@c 0042                  sprintf@f 0036           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 0003                  stringtab 0003  
