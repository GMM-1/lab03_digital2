

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 17:13:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Version 2.40
    25                           ; Generated 04/07/2022 GMT
    26                           ; 
    27                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     008F                     	;# 
   104     0090                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0095                     	;# 
   112     0096                     	;# 
   113     0097                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     0105                     	;# 
   123     0107                     	;# 
   124     0108                     	;# 
   125     0109                     	;# 
   126     010C                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     0185                     	;# 
   132     0187                     	;# 
   133     0188                     	;# 
   134     0189                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     008F                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0095                     	;# 
   190     0096                     	;# 
   191     0097                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009A                     	;# 
   195     009B                     	;# 
   196     009C                     	;# 
   197     009D                     	;# 
   198     009E                     	;# 
   199     009F                     	;# 
   200     0105                     	;# 
   201     0107                     	;# 
   202     0108                     	;# 
   203     0109                     	;# 
   204     010C                     	;# 
   205     010C                     	;# 
   206     010D                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     0185                     	;# 
   210     0187                     	;# 
   211     0188                     	;# 
   212     0189                     	;# 
   213     018C                     	;# 
   214     018D                     	;# 
   215     0000                     	;# 
   216     0001                     	;# 
   217     0002                     	;# 
   218     0003                     	;# 
   219     0004                     	;# 
   220     0005                     	;# 
   221     0006                     	;# 
   222     0007                     	;# 
   223     0008                     	;# 
   224     0009                     	;# 
   225     000A                     	;# 
   226     000B                     	;# 
   227     000C                     	;# 
   228     000D                     	;# 
   229     000E                     	;# 
   230     000E                     	;# 
   231     000F                     	;# 
   232     0010                     	;# 
   233     0011                     	;# 
   234     0012                     	;# 
   235     0013                     	;# 
   236     0014                     	;# 
   237     0015                     	;# 
   238     0015                     	;# 
   239     0016                     	;# 
   240     0017                     	;# 
   241     0018                     	;# 
   242     0019                     	;# 
   243     001A                     	;# 
   244     001B                     	;# 
   245     001B                     	;# 
   246     001C                     	;# 
   247     001D                     	;# 
   248     001E                     	;# 
   249     001F                     	;# 
   250     0081                     	;# 
   251     0085                     	;# 
   252     0086                     	;# 
   253     0087                     	;# 
   254     0088                     	;# 
   255     0089                     	;# 
   256     008C                     	;# 
   257     008D                     	;# 
   258     008E                     	;# 
   259     008F                     	;# 
   260     0090                     	;# 
   261     0091                     	;# 
   262     0092                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0094                     	;# 
   267     0095                     	;# 
   268     0096                     	;# 
   269     0097                     	;# 
   270     0098                     	;# 
   271     0099                     	;# 
   272     009A                     	;# 
   273     009B                     	;# 
   274     009C                     	;# 
   275     009D                     	;# 
   276     009E                     	;# 
   277     009F                     	;# 
   278     0105                     	;# 
   279     0107                     	;# 
   280     0108                     	;# 
   281     0109                     	;# 
   282     010C                     	;# 
   283     010C                     	;# 
   284     010D                     	;# 
   285     010E                     	;# 
   286     010F                     	;# 
   287     0185                     	;# 
   288     0187                     	;# 
   289     0188                     	;# 
   290     0189                     	;# 
   291     018C                     	;# 
   292     018D                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     000D                     	;# 
   307     000E                     	;# 
   308     000E                     	;# 
   309     000F                     	;# 
   310     0010                     	;# 
   311     0011                     	;# 
   312     0012                     	;# 
   313     0013                     	;# 
   314     0014                     	;# 
   315     0015                     	;# 
   316     0015                     	;# 
   317     0016                     	;# 
   318     0017                     	;# 
   319     0018                     	;# 
   320     0019                     	;# 
   321     001A                     	;# 
   322     001B                     	;# 
   323     001B                     	;# 
   324     001C                     	;# 
   325     001D                     	;# 
   326     001E                     	;# 
   327     001F                     	;# 
   328     0081                     	;# 
   329     0085                     	;# 
   330     0086                     	;# 
   331     0087                     	;# 
   332     0088                     	;# 
   333     0089                     	;# 
   334     008C                     	;# 
   335     008D                     	;# 
   336     008E                     	;# 
   337     008F                     	;# 
   338     0090                     	;# 
   339     0091                     	;# 
   340     0092                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0094                     	;# 
   345     0095                     	;# 
   346     0096                     	;# 
   347     0097                     	;# 
   348     0098                     	;# 
   349     0099                     	;# 
   350     009A                     	;# 
   351     009B                     	;# 
   352     009C                     	;# 
   353     009D                     	;# 
   354     009E                     	;# 
   355     009F                     	;# 
   356     0105                     	;# 
   357     0107                     	;# 
   358     0108                     	;# 
   359     0109                     	;# 
   360     010C                     	;# 
   361     010C                     	;# 
   362     010D                     	;# 
   363     010E                     	;# 
   364     010F                     	;# 
   365     0185                     	;# 
   366     0187                     	;# 
   367     0188                     	;# 
   368     0189                     	;# 
   369     018C                     	;# 
   370     018D                     	;# 
   371     001E                     _ADRESH	set	30
   372     001F                     _ADCON0bits	set	31
   373     001F                     _ADCON0	set	31
   374     0013                     _SSPBUF	set	19
   375     0014                     _SSPCON	set	20
   376     0006                     _PORTBbits	set	6
   377     000C                     _PIR1bits	set	12
   378     000B                     _INTCONbits	set	11
   379     0008                     _PORTD	set	8
   380     0063                     _SSPIF	set	99
   381     009F                     _ADCON1	set	159
   382     0094                     _SSPSTATbits	set	148
   383     0094                     _SSPSTAT	set	148
   384     0096                     _IOCBbits	set	150
   385     0095                     _WPUBbits	set	149
   386     0081                     _OPTION_REGbits	set	129
   387     0085                     _TRISAbits	set	133
   388     008C                     _PIE1bits	set	140
   389     0088                     _TRISD	set	136
   390     008F                     _OSCCONbits	set	143
   391     043B                     _TRISC3	set	1083
   392     043D                     _TRISC5	set	1085
   393     0437                     _TRISB7	set	1079
   394     0436                     _TRISB6	set	1078
   395     0428                     _TRISA0	set	1064
   396     0188                     _ANSELbits	set	392
   397     0189                     _ANSELH	set	393
   398     0188                     _ANSEL	set	392
   399                           
   400                           	psect	cinit
   401     000F                     start_initialization:	
   402                           ; #config settings
   403                           
   404     000F                     __initialization:
   405                           
   406                           ; Clear objects allocated to COMMON
   407     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   408     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   409     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   410     0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   411                           
   412                           ; Clear objects allocated to BANK0
   413     0013  1283               	bcf	3,5	;RP0=0, select bank0
   414     0014  1303               	bcf	3,6	;RP1=0, select bank0
   415     0015  01A6               	clrf	__pbssBANK0& (0+127)
   416     0016  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   417     0017                     end_of_initialization:	
   418                           ;End of C runtime variable initialization code
   419                           
   420     0017                     __end_of__initialization:
   421     0017  0183               	clrf	3
   422     0018  120A  118A  28EF   	ljmp	_main	;jump to C main() function
   423                           
   424                           	psect	bssCOMMON
   425     0076                     __pbssCOMMON:
   426     0076                     _flag_antirrebote:
   427     0076                     	ds	2
   428     0078                     _valor_adc:
   429     0078                     	ds	1
   430     0079                     _temporal:
   431     0079                     	ds	1
   432                           
   433                           	psect	bssBANK0
   434     0026                     __pbssBANK0:
   435     0026                     _flag_antirrebote2:
   436     0026                     	ds	2
   437                           
   438                           	psect	cstackCOMMON
   439     0070                     __pcstackCOMMON:
   440     0070                     ?_spiRead:
   441     0070                     ??_spiRead:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_spiWrite:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ??_spiWrite:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_contador:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ??_contador:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_ADC_Init:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?_setup:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?_isr:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ?_spiReceiveWait:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ??_spiReceiveWait:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     spiWrite@dat:	
   475                           ; 1 bytes @ 0x0
   476                           
   477                           
   478                           ; 1 bytes @ 0x0
   479     0070                     	ds	2
   480     0072                     ??_isr:
   481                           
   482                           ; 1 bytes @ 0x2
   483     0072                     	ds	2
   484     0074                     ??_ADC_Init:
   485     0074                     ??_spiInit:	
   486                           ; 1 bytes @ 0x4
   487                           
   488     0074                     ?_ADC_Read:	
   489                           ; 1 bytes @ 0x4
   490                           
   491     0074                     spiInit@sType:	
   492                           ; 2 bytes @ 0x4
   493                           
   494     0074                     ADC_Init@p_ang:	
   495                           ; 1 bytes @ 0x4
   496                           
   497                           
   498                           ; 1 bytes @ 0x4
   499     0074                     	ds	1
   500     0075                     ??_setup:
   501                           
   502                           ; 1 bytes @ 0x5
   503     0075                     	ds	1
   504                           
   505                           	psect	cstackBANK0
   506     0020                     __pcstackBANK0:
   507     0020                     ??_ADC_Read:
   508     0020                     ?_spiInit:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0020                     spiInit@sDataSample:	
   512                           ; 1 bytes @ 0x0
   513                           
   514                           
   515                           ; 1 bytes @ 0x0
   516     0020                     	ds	1
   517     0021                     spiInit@sClockIdle:
   518                           
   519                           ; 1 bytes @ 0x1
   520     0021                     	ds	1
   521     0022                     spiInit@sTransmitEdge:
   522     0022                     ADC_Read@ch:	
   523                           ; 1 bytes @ 0x2
   524                           
   525                           
   526                           ; 1 bytes @ 0x2
   527     0022                     	ds	1
   528     0023                     ??_main:
   529                           
   530                           ; 1 bytes @ 0x3
   531     0023                     	ds	3
   532                           
   533                           	psect	maintext
   534     00EF                     __pmaintext:	
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 92 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : B00/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       3       0       0       0
   557 ;;      Totals:         0       3       0       0       0
   558 ;;Total ram usage:        3 bytes
   559 ;; Hardware stack levels required when called: 5
   560 ;; This function calls:
   561 ;;		_ADC_Init
   562 ;;		_ADC_Read
   563 ;;		_setup
   564 ;; This function is called by:
   565 ;;		Startup code after reset
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     00EF                     _main:	
   570                           ;psect for function _main
   571                           
   572     00EF                     l1060:	
   573                           ;incstack = 0
   574                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   575                           
   576                           
   577                           ;main.c: 93:     ADC_Init(0b01000000);
   578     00EF  3040               	movlw	64
   579     00F0  120A  118A  2132  120A  118A  	fcall	_ADC_Init
   580                           
   581                           ;main.c: 94:     setup();
   582     00F5  120A  118A  209A  120A  118A  	fcall	_setup
   583     00FA                     l74:	
   584                           ;main.c: 99:     while(1)
   585                           
   586                           
   587                           ;main.c: 100:     {;main.c: 101:         valor_adc = ADC_Read(0);
   588     00FA  3000               	movlw	0
   589     00FB  120A  118A  20C8  120A  118A  	fcall	_ADC_Read
   590     0100  0874               	movf	?_ADC_Read,w
   591     0101  00F8               	movwf	_valor_adc
   592     0102                     l1062:
   593                           
   594                           ;main.c: 102:         _delay((unsigned long)((250)*(4000000/4000.0)));
   595     0102  3002               	movlw	2
   596     0103  1283               	bcf	3,5	;RP0=0, select bank0
   597     0104  1303               	bcf	3,6	;RP1=0, select bank0
   598     0105  00A5               	movwf	??_main+2
   599     0106  3045               	movlw	69
   600     0107  00A4               	movwf	??_main+1
   601     0108  30A9               	movlw	169
   602     0109  00A3               	movwf	??_main
   603     010A                     u347:
   604     010A  0BA3               	decfsz	??_main,f
   605     010B  290A               	goto	u347
   606     010C  0BA4               	decfsz	??_main+1,f
   607     010D  290A               	goto	u347
   608     010E  0BA5               	decfsz	??_main+2,f
   609     010F  290A               	goto	u347
   610     0110  28FA               	goto	l74
   611     0111  120A  118A  280C   	ljmp	start
   612     0114                     __end_of_main:
   613                           
   614                           	psect	text1
   615     009A                     __ptext1:	
   616 ;; *************** function _setup *****************
   617 ;; Defined at:
   618 ;;		line 109 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, pclath, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 4
   639 ;; This function calls:
   640 ;;		_spiInit
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646     009A                     _setup:	
   647                           ;psect for function _setup
   648                           
   649     009A                     l1002:	
   650                           ;incstack = 0
   651                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   652                           
   653                           
   654                           ;main.c: 111:     OSCCONbits.IRCF2 = 1;
   655     009A  1683               	bsf	3,5	;RP0=1, select bank1
   656     009B  1303               	bcf	3,6	;RP1=0, select bank1
   657     009C  170F               	bsf	15,6	;volatile
   658                           
   659                           ;main.c: 112:     OSCCONbits.IRCF1 = 1;
   660     009D  168F               	bsf	15,5	;volatile
   661                           
   662                           ;main.c: 113:     OSCCONbits.IRCF0 = 0;
   663     009E  120F               	bcf	15,4	;volatile
   664                           
   665                           ;main.c: 116:     OSCCONbits.SCS = 1;
   666     009F  140F               	bsf	15,0	;volatile
   667     00A0                     l1004:
   668                           
   669                           ;main.c: 117:     ANSEL = 0;
   670     00A0  1683               	bsf	3,5	;RP0=1, select bank3
   671     00A1  1703               	bsf	3,6	;RP1=1, select bank3
   672     00A2  0188               	clrf	8	;volatile
   673                           
   674                           ;main.c: 118:     ANSELH = 0;
   675     00A3  0189               	clrf	9	;volatile
   676     00A4                     l1006:
   677                           
   678                           ;main.c: 119:     ANSELbits.ANS0 = 1;
   679     00A4  1408               	bsf	8,0	;volatile
   680     00A5                     l1008:
   681                           
   682                           ;main.c: 121:     TRISA0 = 1;
   683     00A5  1683               	bsf	3,5	;RP0=1, select bank1
   684     00A6  1303               	bcf	3,6	;RP1=0, select bank1
   685     00A7  1405               	bsf	5,0	;volatile
   686     00A8                     l1010:
   687                           
   688                           ;main.c: 123:     TRISB6 = 1;
   689     00A8  1706               	bsf	6,6	;volatile
   690     00A9                     l1012:
   691                           
   692                           ;main.c: 124:     TRISB7 = 1;
   693     00A9  1786               	bsf	6,7	;volatile
   694                           
   695                           ;main.c: 125:     TRISD = 0;
   696     00AA  0188               	clrf	8	;volatile
   697                           
   698                           ;main.c: 126:     PORTD = 0x00;
   699     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   700     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   701     00AD  0188               	clrf	8	;volatile
   702     00AE                     l1014:
   703                           
   704                           ;main.c: 128:     INTCONbits.GIE = 1;
   705     00AE  178B               	bsf	11,7	;volatile
   706     00AF                     l1016:
   707                           
   708                           ;main.c: 129:     INTCONbits.PEIE = 1;
   709     00AF  170B               	bsf	11,6	;volatile
   710     00B0                     l1018:
   711                           
   712                           ;main.c: 130:     PIR1bits.SSPIF = 0;
   713     00B0  118C               	bcf	12,3	;volatile
   714     00B1                     l1020:
   715                           
   716                           ;main.c: 131:     PIE1bits.SSPIE = 1;
   717     00B1  1683               	bsf	3,5	;RP0=1, select bank1
   718     00B2  1303               	bcf	3,6	;RP1=0, select bank1
   719     00B3  158C               	bsf	12,3	;volatile
   720     00B4                     l1022:
   721                           
   722                           ;main.c: 132:     TRISAbits.TRISA5 = 1;
   723     00B4  1685               	bsf	5,5	;volatile
   724     00B5                     l1024:
   725                           
   726                           ;main.c: 135:   INTCONbits.RBIE = 1;
   727     00B5  158B               	bsf	11,3	;volatile
   728     00B6                     l1026:
   729                           
   730                           ;main.c: 136:   OPTION_REGbits.nRBPU = 0;
   731     00B6  1381               	bcf	1,7	;volatile
   732     00B7                     l1028:
   733                           
   734                           ;main.c: 137:   WPUBbits.WPUB7 = 1;
   735     00B7  1795               	bsf	21,7	;volatile
   736     00B8                     l1030:
   737                           
   738                           ;main.c: 138:   WPUBbits.WPUB6 = 1;
   739     00B8  1715               	bsf	21,6	;volatile
   740     00B9                     l1032:
   741                           
   742                           ;main.c: 139:   IOCBbits.IOCB7 = 1;
   743     00B9  1796               	bsf	22,7	;volatile
   744     00BA                     l1034:
   745                           
   746                           ;main.c: 140:   IOCBbits.IOCB6 = 1;
   747     00BA  1716               	bsf	22,6	;volatile
   748     00BB                     l1036:
   749                           
   750                           ;main.c: 141:   INTCONbits.RBIF = 0;
   751     00BB  100B               	bcf	11,0	;volatile
   752     00BC                     l1038:
   753                           
   754                           ;main.c: 144:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   755     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   756     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   757     00BE  01A0               	clrf	spiInit@sDataSample
   758     00BF  01A1               	clrf	spiInit@sClockIdle
   759     00C0  01A2               	clrf	spiInit@sTransmitEdge
   760     00C1  3024               	movlw	36
   761     00C2  120A  118A  2114  120A  118A  	fcall	_spiInit
   762     00C7                     l80:
   763     00C7  0008               	return
   764     00C8                     __end_of_setup:
   765                           
   766                           	psect	text2
   767     0114                     __ptext2:	
   768 ;; *************** function _spiInit *****************
   769 ;; Defined at:
   770 ;;		line 12 in file "SPI.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  sType           1    wreg     enum E1292
   773 ;;  sDataSample     1    0[BANK0 ] enum E1300
   774 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   775 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  sType           1    4[COMMON] enum E1292
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       3       0       0       0
   788 ;;      Locals:         1       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         1       3       0       0       0
   791 ;;Total ram usage:        4 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 3
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_setup
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801     0114                     _spiInit:	
   802                           ;psect for function _spiInit
   803                           
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   807                           ;spiInit@sType stored from wreg
   808     0114  00F4               	movwf	spiInit@sType
   809     0115                     l992:
   810                           
   811                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   812     0115  1683               	bsf	3,5	;RP0=1, select bank1
   813     0116  1303               	bcf	3,6	;RP1=0, select bank1
   814     0117  1287               	bcf	7,5	;volatile
   815                           
   816                           ;SPI.c: 15:     if(sType & 0b00000100)
   817     0118  1D74               	btfss	spiInit@sType,2
   818     0119  291B               	goto	u301
   819     011A  291C               	goto	u300
   820     011B                     u301:
   821     011B  2924               	goto	l998
   822     011C                     u300:
   823     011C                     l994:
   824                           
   825                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   826     011C  1283               	bcf	3,5	;RP0=0, select bank0
   827     011D  1303               	bcf	3,6	;RP1=0, select bank0
   828     011E  0822               	movf	spiInit@sTransmitEdge,w
   829     011F  1683               	bsf	3,5	;RP0=1, select bank1
   830     0120  1303               	bcf	3,6	;RP1=0, select bank1
   831     0121  0094               	movwf	20	;volatile
   832     0122                     l996:
   833                           
   834                           ;SPI.c: 18:         TRISC3 = 1;
   835     0122  1587               	bsf	7,3	;volatile
   836                           
   837                           ;SPI.c: 19:     }
   838     0123  292C               	goto	l103
   839     0124                     l998:
   840                           
   841                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   842     0124  1283               	bcf	3,5	;RP0=0, select bank0
   843     0125  1303               	bcf	3,6	;RP1=0, select bank0
   844     0126  0820               	movf	spiInit@sDataSample,w
   845     0127  0422               	iorwf	spiInit@sTransmitEdge,w
   846     0128  1683               	bsf	3,5	;RP0=1, select bank1
   847     0129  1303               	bcf	3,6	;RP1=0, select bank1
   848     012A  0094               	movwf	20	;volatile
   849     012B                     l1000:
   850                           
   851                           ;SPI.c: 23:         TRISC3 = 0;
   852     012B  1187               	bcf	7,3	;volatile
   853     012C                     l103:	
   854                           ;SPI.c: 24:     }
   855                           
   856                           
   857                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   858     012C  0874               	movf	spiInit@sType,w
   859     012D  1283               	bcf	3,5	;RP0=0, select bank0
   860     012E  1303               	bcf	3,6	;RP1=0, select bank0
   861     012F  0421               	iorwf	spiInit@sClockIdle,w
   862     0130  0094               	movwf	20	;volatile
   863     0131                     l104:
   864     0131  0008               	return
   865     0132                     __end_of_spiInit:
   866                           
   867                           	psect	text3
   868     00C8                     __ptext3:	
   869 ;; *************** function _ADC_Read *****************
   870 ;; Defined at:
   871 ;;		line 10 in file "adc.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  ch              1    wreg     unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  ch              1    2[BANK0 ] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2    4[COMMON] unsigned int 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         2       0       0       0       0
   886 ;;      Locals:         0       1       0       0       0
   887 ;;      Temps:          0       2       0       0       0
   888 ;;      Totals:         2       3       0       0       0
   889 ;;Total ram usage:        5 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 3
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899     00C8                     _ADC_Read:	
   900                           ;psect for function _ADC_Read
   901                           
   902                           
   903                           ;incstack = 0
   904                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   905                           ;ADC_Read@ch stored from wreg
   906     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   907     00C9  1303               	bcf	3,6	;RP1=0, select bank0
   908     00CA  00A2               	movwf	ADC_Read@ch
   909     00CB                     l1040:
   910                           
   911                           ;adc.c: 10: unsigned int ADC_Read(unsigned char ch);adc.c: 11: {;adc.c: 12:     if(ch > 
      +                          13){
   912     00CB  300E               	movlw	14
   913     00CC  0222               	subwf	ADC_Read@ch,w
   914     00CD  1C03               	skipc
   915     00CE  28D0               	goto	u311
   916     00CF  28D1               	goto	u310
   917     00D0                     u311:
   918     00D0  28D4               	goto	l1048
   919     00D1                     u310:
   920     00D1                     l1042:
   921                           
   922                           ;adc.c: 13:         return 0;
   923     00D1  01F4               	clrf	?_ADC_Read
   924     00D2  01F5               	clrf	?_ADC_Read+1
   925     00D3  28EE               	goto	l136
   926     00D4                     l1048:
   927                           
   928                           ;adc.c: 15:         ADCON0 = 0b01000000;
   929     00D4  3040               	movlw	64
   930     00D5  009F               	movwf	31	;volatile
   931     00D6                     l1050:
   932                           
   933                           ;adc.c: 16:         ADCON0 = (ch << 2);
   934     00D6  0822               	movf	ADC_Read@ch,w
   935     00D7  00A0               	movwf	??_ADC_Read
   936     00D8  3001               	movlw	1
   937     00D9                     u325:
   938     00D9  1003               	clrc
   939     00DA  0DA0               	rlf	??_ADC_Read,f
   940     00DB  3EFF               	addlw	-1
   941     00DC  1D03               	skipz
   942     00DD  28D9               	goto	u325
   943     00DE  1003               	clrc
   944     00DF  0D20               	rlf	??_ADC_Read,w
   945     00E0  009F               	movwf	31	;volatile
   946     00E1                     l1052:
   947                           
   948                           ;adc.c: 17:         ADCON0bits.ADON = 1;
   949     00E1  141F               	bsf	31,0	;volatile
   950     00E2                     l1054:
   951                           
   952                           ;adc.c: 18:         ADCON0bits.GO_DONE = 1;
   953     00E2  149F               	bsf	31,1	;volatile
   954     00E3                     l138:	
   955                           ;adc.c: 19:         while(ADCON0bits.GO_DONE == 1);
   956                           
   957     00E3  189F               	btfsc	31,1	;volatile
   958     00E4  28E6               	goto	u331
   959     00E5  28E7               	goto	u330
   960     00E6                     u331:
   961     00E6  28E3               	goto	l138
   962     00E7                     u330:
   963     00E7                     l1056:
   964                           
   965                           ;adc.c: 20:         return ADRESH;
   966     00E7  081E               	movf	30,w	;volatile
   967     00E8  00A0               	movwf	??_ADC_Read
   968     00E9  01A1               	clrf	??_ADC_Read+1
   969     00EA  0820               	movf	??_ADC_Read,w
   970     00EB  00F4               	movwf	?_ADC_Read
   971     00EC  0821               	movf	??_ADC_Read+1,w
   972     00ED  00F5               	movwf	?_ADC_Read+1
   973     00EE                     l136:
   974     00EE  0008               	return
   975     00EF                     __end_of_ADC_Read:
   976                           
   977                           	psect	text4
   978     0132                     __ptext4:	
   979 ;; *************** function _ADC_Init *****************
   980 ;; Defined at:
   981 ;;		line 3 in file "adc.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  p_ang           1    wreg     unsigned char 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  p_ang           1    4[COMMON] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         1       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0
   998 ;;      Totals:         1       0       0       0       0
   999 ;;Total ram usage:        1 bytes
  1000 ;; Hardware stack levels used: 1
  1001 ;; Hardware stack levels required when called: 3
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009     0132                     _ADC_Init:	
  1010                           ;psect for function _ADC_Init
  1011                           
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _ADC_Init: [wreg+status,2]
  1015                           ;ADC_Init@p_ang stored from wreg
  1016     0132  00F4               	movwf	ADC_Init@p_ang
  1017     0133                     l780:
  1018                           
  1019                           ;adc.c: 3: void ADC_Init(unsigned char p_ang);adc.c: 4: {;adc.c: 5:     ADCON1 = 0x00;
  1020     0133  1683               	bsf	3,5	;RP0=1, select bank1
  1021     0134  1303               	bcf	3,6	;RP1=0, select bank1
  1022     0135  019F               	clrf	31	;volatile
  1023     0136                     l782:
  1024                           
  1025                           ;adc.c: 6:     ADCON0 = p_ang;
  1026     0136  0874               	movf	ADC_Init@p_ang,w
  1027     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1028     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1029     0139  009F               	movwf	31	;volatile
  1030     013A                     l132:
  1031     013A  0008               	return
  1032     013B                     __end_of_ADC_Init:
  1033                           
  1034                           	psect	text5
  1035     0062                     __ptext5:	
  1036 ;; *************** function _isr *****************
  1037 ;; Defined at:
  1038 ;;		line 67 in file "main.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          2       0       0       0       0
  1055 ;;      Totals:         2       0       0       0       0
  1056 ;;Total ram usage:        2 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; Hardware stack levels required when called: 2
  1059 ;; This function calls:
  1060 ;;		_contador
  1061 ;;		_spiRead
  1062 ;;		_spiWrite
  1063 ;; This function is called by:
  1064 ;;		Interrupt level 1
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068     0062                     _isr:	
  1069                           ;psect for function _isr
  1070                           
  1071     0062                     i1l968:
  1072                           
  1073                           ;main.c: 69:    if(SSPIF == 1)
  1074     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1075     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1076     0064  1D8C               	btfss	12,3	;volatile
  1077     0065  2867               	goto	u26_21
  1078     0066  2868               	goto	u26_20
  1079     0067                     u26_21:
  1080     0067  2889               	goto	i1l982
  1081     0068                     u26_20:
  1082     0068                     i1l970:
  1083                           
  1084                           ;main.c: 70:    {;main.c: 71:        temporal = spiRead();
  1085     0068  120A  118A  213B  120A  118A  	fcall	_spiRead
  1086     006D  00F9               	movwf	_temporal
  1087     006E                     i1l972:
  1088                           
  1089                           ;main.c: 72:        if (temporal == 1)
  1090     006E  0379               	decf	_temporal,w
  1091     006F  1D03               	btfss	3,2
  1092     0070  2872               	goto	u27_21
  1093     0071  2873               	goto	u27_20
  1094     0072                     u27_21:
  1095     0072  2879               	goto	i1l976
  1096     0073                     u27_20:
  1097     0073                     i1l974:
  1098                           
  1099                           ;main.c: 73:        {;main.c: 74:         spiWrite(valor_adc);
  1100     0073  0878               	movf	_valor_adc,w
  1101     0074  120A  118A  214B  120A  118A  	fcall	_spiWrite
  1102     0079                     i1l976:
  1103                           
  1104                           ;main.c: 76:        if(temporal == 0)
  1105     0079  0879               	movf	_temporal,w
  1106     007A  1D03               	btfss	3,2
  1107     007B  287D               	goto	u28_21
  1108     007C  287E               	goto	u28_20
  1109     007D                     u28_21:
  1110     007D  2886               	goto	i1l980
  1111     007E                     u28_20:
  1112     007E                     i1l978:
  1113                           
  1114                           ;main.c: 77:        {;main.c: 78:          spiWrite(PORTD);
  1115     007E  1283               	bcf	3,5	;RP0=0, select bank0
  1116     007F  1303               	bcf	3,6	;RP1=0, select bank0
  1117     0080  0808               	movf	8,w	;volatile
  1118     0081  120A  118A  214B  120A  118A  	fcall	_spiWrite
  1119     0086                     i1l980:
  1120                           
  1121                           ;main.c: 80:         SSPIF = 0;
  1122     0086  1283               	bcf	3,5	;RP0=0, select bank0
  1123     0087  1303               	bcf	3,6	;RP1=0, select bank0
  1124     0088  118C               	bcf	12,3	;volatile
  1125     0089                     i1l982:
  1126                           
  1127                           ;main.c: 83:     if (INTCONbits.RBIF == 1)
  1128     0089  1C0B               	btfss	11,0	;volatile
  1129     008A  288C               	goto	u29_21
  1130     008B  288D               	goto	u29_20
  1131     008C                     u29_21:
  1132     008C  2893               	goto	i1l69
  1133     008D                     u29_20:
  1134     008D                     i1l984:
  1135                           
  1136                           ;main.c: 84:     {;main.c: 85:         contador();
  1137     008D  120A  118A  201B  120A  118A  	fcall	_contador
  1138     0092                     i1l986:
  1139                           
  1140                           ;main.c: 86:         INTCONbits.RBIF = 0;
  1141     0092  100B               	bcf	11,0	;volatile
  1142     0093                     i1l69:
  1143     0093  0873               	movf	??_isr+1,w
  1144     0094  008A               	movwf	10
  1145     0095  0E72               	swapf	??_isr,w
  1146     0096  0083               	movwf	3
  1147     0097  0EFE               	swapf	btemp,f
  1148     0098  0E7E               	swapf	btemp,w
  1149     0099  0009               	retfie
  1150     009A                     __end_of_isr:
  1151                           
  1152                           	psect	intentry
  1153     0004                     __pintentry:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1156                           
  1157     0004                     interrupt_function:
  1158     007E                     saved_w	set	btemp
  1159     0004  00FE               	movwf	btemp
  1160     0005  0E03               	swapf	3,w
  1161     0006  00F2               	movwf	??_isr
  1162     0007  080A               	movf	10,w
  1163     0008  00F3               	movwf	??_isr+1
  1164     0009  120A  118A  2862   	ljmp	_isr
  1165                           
  1166                           	psect	text6
  1167     014B                     __ptext6:	
  1168 ;; *************** function _spiWrite *****************
  1169 ;; Defined at:
  1170 ;;		line 34 in file "SPI.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  dat             1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  dat             1    0[COMMON] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       0       0       0       0
  1185 ;;      Locals:         1       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0
  1187 ;;      Totals:         1       0       0       0       0
  1188 ;;Total ram usage:        1 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_isr
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197     014B                     _spiWrite:	
  1198                           ;psect for function _spiWrite
  1199                           
  1200                           
  1201                           ;incstack = 0
  1202                           ; Regs used in _spiWrite: [wreg]
  1203                           ;spiWrite@dat stored from wreg
  1204     014B  00F0               	movwf	spiWrite@dat
  1205     014C                     i1l750:
  1206                           
  1207                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1208     014C  0870               	movf	spiWrite@dat,w
  1209     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1210     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1211     014F  0093               	movwf	19	;volatile
  1212     0150                     i1l113:
  1213     0150  0008               	return
  1214     0151                     __end_of_spiWrite:
  1215                           
  1216                           	psect	text7
  1217     013B                     __ptext7:	
  1218 ;; *************** function _spiRead *****************
  1219 ;; Defined at:
  1220 ;;		line 47 in file "SPI.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      unsigned char 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 1
  1241 ;; This function calls:
  1242 ;;		_spiReceiveWait
  1243 ;; This function is called by:
  1244 ;;		_isr
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248     013B                     _spiRead:	
  1249                           ;psect for function _spiRead
  1250                           
  1251     013B                     i1l744:	
  1252                           ;incstack = 0
  1253                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1254                           
  1255                           
  1256                           ;SPI.c: 49:     spiReceiveWait();
  1257     013B  120A  118A  2144  120A  118A  	fcall	_spiReceiveWait
  1258     0140                     i1l746:
  1259                           
  1260                           ;SPI.c: 50:     return(SSPBUF);
  1261     0140  1283               	bcf	3,5	;RP0=0, select bank0
  1262     0141  1303               	bcf	3,6	;RP1=0, select bank0
  1263     0142  0813               	movf	19,w	;volatile
  1264     0143                     i1l121:
  1265     0143  0008               	return
  1266     0144                     __end_of_spiRead:
  1267                           
  1268                           	psect	text8
  1269     0144                     __ptext8:	
  1270 ;; *************** function _spiReceiveWait *****************
  1271 ;; Defined at:
  1272 ;;		line 29 in file "SPI.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		None
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_spiRead
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299     0144                     _spiReceiveWait:	
  1300                           ;psect for function _spiReceiveWait
  1301                           
  1302     0144                     i1l742:	
  1303                           ;incstack = 0
  1304                           ; Regs used in _spiReceiveWait: []
  1305                           
  1306     0144                     i1l107:	
  1307                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1308                           
  1309     0144  1683               	bsf	3,5	;RP0=1, select bank1
  1310     0145  1303               	bcf	3,6	;RP1=0, select bank1
  1311     0146  1C14               	btfss	20,0	;volatile
  1312     0147  2949               	goto	u2_21
  1313     0148  294A               	goto	u2_20
  1314     0149                     u2_21:
  1315     0149  2944               	goto	i1l107
  1316     014A                     u2_20:
  1317     014A                     i1l110:
  1318     014A  0008               	return
  1319     014B                     __end_of_spiReceiveWait:
  1320                           
  1321                           	psect	text9
  1322     001B                     __ptext9:	
  1323 ;; *************** function _contador *****************
  1324 ;; Defined at:
  1325 ;;		line 148 in file "main.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          2       0       0       0       0
  1342 ;;      Totals:         2       0       0       0       0
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_isr
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352     001B                     _contador:	
  1353                           ;psect for function _contador
  1354                           
  1355     001B                     i1l882:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _contador: [wreg+status,2+status,0]
  1358                           
  1359                           
  1360                           ;main.c: 150:   if (PORTBbits.RB6 == 0)
  1361     001B  1283               	bcf	3,5	;RP0=0, select bank0
  1362     001C  1303               	bcf	3,6	;RP1=0, select bank0
  1363     001D  1B06               	btfsc	6,6	;volatile
  1364     001E  2820               	goto	u17_21
  1365     001F  2821               	goto	u17_20
  1366     0020                     u17_21:
  1367     0020  2825               	goto	i1l886
  1368     0021                     u17_20:
  1369     0021                     i1l884:
  1370                           
  1371                           ;main.c: 151:   {;main.c: 152:     flag_antirrebote = 1;
  1372     0021  3001               	movlw	1
  1373     0022  00F6               	movwf	_flag_antirrebote
  1374     0023  3000               	movlw	0
  1375     0024  00F7               	movwf	_flag_antirrebote+1
  1376     0025                     i1l886:
  1377                           
  1378                           ;main.c: 154:   if (PORTBbits.RB6 == 1 && flag_antirrebote == 1)
  1379     0025  1F06               	btfss	6,6	;volatile
  1380     0026  2828               	goto	u18_21
  1381     0027  2829               	goto	u18_20
  1382     0028                     u18_21:
  1383     0028  283F               	goto	i1l896
  1384     0029                     u18_20:
  1385     0029                     i1l888:
  1386     0029  0376               	decf	_flag_antirrebote,w
  1387     002A  0477               	iorwf	_flag_antirrebote+1,w
  1388     002B  1D03               	btfss	3,2
  1389     002C  282E               	goto	u19_21
  1390     002D  282F               	goto	u19_20
  1391     002E                     u19_21:
  1392     002E  283F               	goto	i1l896
  1393     002F                     u19_20:
  1394     002F                     i1l890:
  1395                           
  1396                           ;main.c: 155:   {;main.c: 156:       _delay((unsigned long)((10)*(4000000/4000.0)));
  1397     002F  300D               	movlw	13
  1398     0030  00F1               	movwf	??_contador+1
  1399     0031  30FB               	movlw	251
  1400     0032  00F0               	movwf	??_contador
  1401     0033                     u35_27:
  1402     0033  0BF0               	decfsz	??_contador,f
  1403     0034  2833               	goto	u35_27
  1404     0035  0BF1               	decfsz	??_contador+1,f
  1405     0036  2833               	goto	u35_27
  1406     0037  2838               	nop2
  1407     0038                     i1l892:
  1408                           
  1409                           ;main.c: 157:       PORTD = PORTD + 1;
  1410     0038  1283               	bcf	3,5	;RP0=0, select bank0
  1411     0039  1303               	bcf	3,6	;RP1=0, select bank0
  1412     003A  0808               	movf	8,w	;volatile
  1413     003B  3E01               	addlw	1
  1414     003C  0088               	movwf	8	;volatile
  1415     003D                     i1l894:
  1416                           
  1417                           ;main.c: 158:       flag_antirrebote = 0;
  1418     003D  01F6               	clrf	_flag_antirrebote
  1419     003E  01F7               	clrf	_flag_antirrebote+1
  1420     003F                     i1l896:
  1421                           
  1422                           ;main.c: 160:   if (PORTBbits.RB7 == 0)
  1423     003F  1B86               	btfsc	6,7	;volatile
  1424     0040  2842               	goto	u20_21
  1425     0041  2843               	goto	u20_20
  1426     0042                     u20_21:
  1427     0042  2847               	goto	i1l900
  1428     0043                     u20_20:
  1429     0043                     i1l898:
  1430                           
  1431                           ;main.c: 161:   {;main.c: 162:       flag_antirrebote2 = 1;
  1432     0043  3001               	movlw	1
  1433     0044  00A6               	movwf	_flag_antirrebote2
  1434     0045  3000               	movlw	0
  1435     0046  00A7               	movwf	_flag_antirrebote2+1
  1436     0047                     i1l900:
  1437                           
  1438                           ;main.c: 164:   if (PORTBbits.RB7 == 1 && flag_antirrebote2 == 1)
  1439     0047  1F86               	btfss	6,7	;volatile
  1440     0048  284A               	goto	u21_21
  1441     0049  284B               	goto	u21_20
  1442     004A                     u21_21:
  1443     004A  2861               	goto	i1l87
  1444     004B                     u21_20:
  1445     004B                     i1l902:
  1446     004B  0326               	decf	_flag_antirrebote2,w
  1447     004C  0427               	iorwf	_flag_antirrebote2+1,w
  1448     004D  1D03               	btfss	3,2
  1449     004E  2850               	goto	u22_21
  1450     004F  2851               	goto	u22_20
  1451     0050                     u22_21:
  1452     0050  2861               	goto	i1l87
  1453     0051                     u22_20:
  1454     0051                     i1l904:
  1455                           
  1456                           ;main.c: 165:   {;main.c: 166:       _delay((unsigned long)((10)*(4000000/4000.0)));
  1457     0051  300D               	movlw	13
  1458     0052  00F1               	movwf	??_contador+1
  1459     0053  30FB               	movlw	251
  1460     0054  00F0               	movwf	??_contador
  1461     0055                     u36_27:
  1462     0055  0BF0               	decfsz	??_contador,f
  1463     0056  2855               	goto	u36_27
  1464     0057  0BF1               	decfsz	??_contador+1,f
  1465     0058  2855               	goto	u36_27
  1466     0059  285A               	nop2
  1467     005A                     i1l906:
  1468                           
  1469                           ;main.c: 167:       PORTD = PORTD - 1;
  1470     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1471     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1472     005C  0808               	movf	8,w	;volatile
  1473     005D  3EFF               	addlw	255
  1474     005E  0088               	movwf	8	;volatile
  1475     005F                     i1l908:
  1476                           
  1477                           ;main.c: 168:       flag_antirrebote2 = 0;
  1478     005F  01A6               	clrf	_flag_antirrebote2
  1479     0060  01A7               	clrf	_flag_antirrebote2+1
  1480     0061                     i1l87:
  1481     0061  0008               	return
  1482     0062                     __end_of_contador:
  1483     007E                     btemp	set	126	;btemp
  1484     007E                     wtemp0	set	126
  1485                           
  1486                           	psect	idloc
  1487                           
  1488                           ;Config register IDLOC0 @ 0x2000
  1489                           ;	unspecified, using default values
  1490     2000                     	org	8192
  1491     2000  3FFF               	dw	16383
  1492                           
  1493                           ;Config register IDLOC1 @ 0x2001
  1494                           ;	unspecified, using default values
  1495     2001                     	org	8193
  1496     2001  3FFF               	dw	16383
  1497                           
  1498                           ;Config register IDLOC2 @ 0x2002
  1499                           ;	unspecified, using default values
  1500     2002                     	org	8194
  1501     2002  3FFF               	dw	16383
  1502                           
  1503                           ;Config register IDLOC3 @ 0x2003
  1504                           ;	unspecified, using default values
  1505     2003                     	org	8195
  1506     2003  3FFF               	dw	16383
  1507                           
  1508                           	psect	config
  1509                           
  1510                           ;Config register CONFIG1 @ 0x2007
  1511                           ;	Oscillator Selection bits
  1512                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1513                           ;	Watchdog Timer Enable bit
  1514                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1515                           ;	Power-up Timer Enable bit
  1516                           ;	PWRTE = OFF, PWRT disabled
  1517                           ;	RE3/MCLR pin function select bit
  1518                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1519                           ;	Code Protection bit
  1520                           ;	CP = OFF, Program memory code protection is disabled
  1521                           ;	Data Code Protection bit
  1522                           ;	CPD = OFF, Data memory code protection is disabled
  1523                           ;	Brown Out Reset Selection bits
  1524                           ;	BOREN = OFF, BOR disabled
  1525                           ;	Internal External Switchover bit
  1526                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1527                           ;	Fail-Safe Clock Monitor Enabled bit
  1528                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1529                           ;	Low Voltage Programming Enable bit
  1530                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1531                           ;	In-Circuit Debugger Mode bit
  1532                           ;	DEBUG = 0x1, unprogramme  1533     2007                     	org	8199
  1534     2007  20D4               	dw	8404
  1535                           
  1536                           ;Config register CONFIG2 @ 0x2008
  1537                           ;	Brown-out Reset Selection bit
  1538                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1539                           ;	Flash Program Memory Self Write Enable bits
  1540                           ;	WRT = OFF, Write protection off
  1541     2008                     	org	8200
  1542     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      6       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_contador

Critical Paths under _main in BANK0

    _main->_ADC_Read
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     533
                                              3 BANK0      3     3      0
                           _ADC_Init
                           _ADC_Read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      62
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              2 COMMON     2     2      0
                           _contador
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _contador                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _setup
     _spiInit

 _isr (ROOT)
   _contador
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 17:13:11 2023

            _SSPSTATbits 0094                       l80 00C7                       l74 00FA  
                    l103 012C                      l104 0131                      l132 013A  
                    l136 00EE                      l138 00E3                      l780 0133  
                    l782 0136                      l992 0115                      l994 011C  
                    l996 0122                      l998 0124                      u300 011C  
                    u301 011B                      u310 00D1                      u311 00D0  
                    u330 00E7                      u331 00E6                      u325 00D9  
                    u347 010A                      _isr 0062                     l1000 012B  
                   l1010 00A8                     l1002 009A                     l1020 00B1  
                   l1012 00A9                     l1004 00A0                     l1030 00B8  
                   l1022 00B4                     l1014 00AE                     l1006 00A4  
                   l1040 00CB                     l1032 00B9                     l1024 00B5  
                   l1016 00AF                     l1008 00A5                     l1050 00D6  
                   l1042 00D1                     l1034 00BA                     l1026 00B6  
                   l1018 00B0                     l1052 00E1                     l1036 00BB  
                   l1028 00B7                     l1060 00EF                     l1054 00E2  
                   l1038 00BC                     l1062 0102                     l1056 00E7  
                   l1048 00D4                     ?_isr 0070                     i1l69 0093  
                   i1l87 0061                     u2_20 014A                     u2_21 0149  
                   _main 00EF                     btemp 007E         __end_of_ADC_Init 013B  
       __end_of_ADC_Read 00EF                     start 000C                    ??_isr 0072  
                  ?_main 0070                    _ANSEL 0188                    i1l110 014A  
                  i1l121 0143                    i1l113 0150                    i1l107 0144  
                  i1l900 0047                    i1l902 004B                    i1l742 0144  
                  i1l750 014C                    i1l904 0051                    i1l744 013B  
                  i1l906 005A                    i1l746 0140                    i1l908 005F  
                  i1l890 002F                    i1l882 001B                    i1l970 0068  
                  i1l892 0038                    i1l884 0021                    i1l980 0086  
                  i1l972 006E                    i1l894 003D                    i1l886 0025  
                  i1l974 0073                    i1l982 0089                    i1l888 0029  
                  i1l896 003F                    i1l984 008D                    i1l976 0079  
                  i1l968 0062                    i1l898 0043                    i1l986 0092  
                  i1l978 007E                    u20_20 0043                    u20_21 0042  
                  u21_20 004B                    u21_21 004A                    u22_20 0051  
                  u22_21 0050                    u17_20 0021                    u17_21 0020  
                  u18_20 0029                    u26_20 0068                    u18_21 0028  
                  u26_21 0067                    u19_20 002F                    u27_20 0073  
                  u19_21 002E                    u27_21 0072                    _PORTD 0008  
                  u35_27 0033                    u28_20 007E                    u28_21 007D  
                  u36_27 0055                    u29_20 008D                    u29_21 008C  
                  _TRISD 0088                    _SSPIF 0063                    _setup 009A  
                  pclath 000A          __end_of_spiInit 0132          __end_of_spiRead 0144  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0114                   ??_main 0023                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISA0 0428                   _TRISC3 043B  
                 _TRISB6 0436                   _TRISB7 0437                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_contador 0062  
              ?_ADC_Init 0070                ?_ADC_Read 0074                   saved_w 007E  
       __end_of_spiWrite 0151                ??_spiInit 0074                ??_spiRead 0070  
__end_of__initialization 0017           __pcstackCOMMON 0070         _flag_antirrebote 0076  
          __end_of_setup 00C8           _OPTION_REGbits 0081               ??_ADC_Init 0074  
             ??_ADC_Read 0020                  ??_setup 0075               __pbssBANK0 0026  
             __pmaintext 00EF               __pintentry 0004               ADC_Read@ch 0022  
                _SSPSTAT 0094                ?_contador 0070                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 009A                  __ptext2 0114  
                __ptext3 00C8                  __ptext4 0132                  __ptext5 0062  
                __ptext6 014B                  __ptext7 013B                  __ptext8 0144  
                __ptext9 001B                  _spiInit 0114                  _spiRead 013B  
   end_of_initialization 0017               ??_contador 0070               ??_spiWrite 0070  
              _PORTBbits 0006                _TRISAbits 0085              spiWrite@dat 0070  
      _flag_antirrebote2 0026           _spiReceiveWait 0144      start_initialization 000F  
            __end_of_isr 009A   __end_of_spiReceiveWait 014B              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
               _ADC_Init 0132                 _ADC_Read 00C8                 ?_spiInit 0020  
               ?_spiRead 0070     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C                _valor_adc 0078               _ADCON0bits 001F  
               _WPUBbits 0095            ADC_Init@p_ang 0074                 _contador 001B  
               _temporal 0079                 _spiWrite 014B             spiInit@sType 0074  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F  
